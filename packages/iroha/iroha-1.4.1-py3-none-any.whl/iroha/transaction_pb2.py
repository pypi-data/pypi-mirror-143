# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transaction.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import commands_pb2 as commands__pb2
from . import primitive_pb2 as primitive__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11transaction.proto\x12\x0eiroha.protocol\x1a\x0e\x63ommands.proto\x1a\x0fprimitive.proto\"\xb4\x04\n\x0bTransaction\x12\x34\n\x07payload\x18\x01 \x01(\x0b\x32#.iroha.protocol.Transaction.Payload\x12-\n\nsignatures\x18\x02 \x03(\x0b\x32\x19.iroha.protocol.Signature\x1a\xbf\x03\n\x07Payload\x12K\n\x0freduced_payload\x18\x01 \x01(\x0b\x32\x32.iroha.protocol.Transaction.Payload.ReducedPayload\x12>\n\x05\x62\x61tch\x18\x05 \x01(\x0b\x32-.iroha.protocol.Transaction.Payload.BatchMetaH\x00\x1a\x90\x01\n\tBatchMeta\x12\x45\n\x04type\x18\x01 \x01(\x0e\x32\x37.iroha.protocol.Transaction.Payload.BatchMeta.BatchType\x12\x16\n\x0ereduced_hashes\x18\x02 \x03(\t\"$\n\tBatchType\x12\n\n\x06\x41TOMIC\x10\x00\x12\x0b\n\x07ORDERED\x10\x01\x1a}\n\x0eReducedPayload\x12)\n\x08\x63ommands\x18\x01 \x03(\x0b\x32\x17.iroha.protocol.Command\x12\x1a\n\x12\x63reator_account_id\x18\x02 \x01(\t\x12\x14\n\x0c\x63reated_time\x18\x03 \x01(\x04\x12\x0e\n\x06quorum\x18\x04 \x01(\rB\x15\n\x13optional_batch_metaB\x1aZ\x18iroha.generated/protocolb\x06proto3')



_TRANSACTION = DESCRIPTOR.message_types_by_name['Transaction']
_TRANSACTION_PAYLOAD = _TRANSACTION.nested_types_by_name['Payload']
_TRANSACTION_PAYLOAD_BATCHMETA = _TRANSACTION_PAYLOAD.nested_types_by_name['BatchMeta']
_TRANSACTION_PAYLOAD_REDUCEDPAYLOAD = _TRANSACTION_PAYLOAD.nested_types_by_name['ReducedPayload']
_TRANSACTION_PAYLOAD_BATCHMETA_BATCHTYPE = _TRANSACTION_PAYLOAD_BATCHMETA.enum_types_by_name['BatchType']
Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {

  'Payload' : _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), {

    'BatchMeta' : _reflection.GeneratedProtocolMessageType('BatchMeta', (_message.Message,), {
      'DESCRIPTOR' : _TRANSACTION_PAYLOAD_BATCHMETA,
      '__module__' : 'transaction_pb2'
      # @@protoc_insertion_point(class_scope:iroha.protocol.Transaction.Payload.BatchMeta)
      })
    ,

    'ReducedPayload' : _reflection.GeneratedProtocolMessageType('ReducedPayload', (_message.Message,), {
      'DESCRIPTOR' : _TRANSACTION_PAYLOAD_REDUCEDPAYLOAD,
      '__module__' : 'transaction_pb2'
      # @@protoc_insertion_point(class_scope:iroha.protocol.Transaction.Payload.ReducedPayload)
      })
    ,
    'DESCRIPTOR' : _TRANSACTION_PAYLOAD,
    '__module__' : 'transaction_pb2'
    # @@protoc_insertion_point(class_scope:iroha.protocol.Transaction.Payload)
    })
  ,
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'transaction_pb2'
  # @@protoc_insertion_point(class_scope:iroha.protocol.Transaction)
  })
_sym_db.RegisterMessage(Transaction)
_sym_db.RegisterMessage(Transaction.Payload)
_sym_db.RegisterMessage(Transaction.Payload.BatchMeta)
_sym_db.RegisterMessage(Transaction.Payload.ReducedPayload)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\030iroha.generated/protocol'
  _TRANSACTION._serialized_start=71
  _TRANSACTION._serialized_end=635
  _TRANSACTION_PAYLOAD._serialized_start=188
  _TRANSACTION_PAYLOAD._serialized_end=635
  _TRANSACTION_PAYLOAD_BATCHMETA._serialized_start=341
  _TRANSACTION_PAYLOAD_BATCHMETA._serialized_end=485
  _TRANSACTION_PAYLOAD_BATCHMETA_BATCHTYPE._serialized_start=449
  _TRANSACTION_PAYLOAD_BATCHMETA_BATCHTYPE._serialized_end=485
  _TRANSACTION_PAYLOAD_REDUCEDPAYLOAD._serialized_start=487
  _TRANSACTION_PAYLOAD_REDUCEDPAYLOAD._serialized_end=612
# @@protoc_insertion_point(module_scope)
