# (c) Copyright 2022 Aaron Kimball
#
# Common default values for all non-architecture-specific config elements.

arch_interface = None
instruction_set = 'Unknown'

RAMSIZE  = 0x1000     # Total size of RAM in bytes.
RAMEND   = 0x0FFF     # Last valid RAM address.

default_op_width = 2  # Standard opcode width to fetch/decode.

int_size = 4          # size of 'int' data type.
push_word_len = 4     # size of word added to the stack with PUSH opcode.
ret_addr_size = 4     # size of an address in the $PC register

endian = 'little'
stack_model = 'empty_desc'        # empty_desc for descending stack; $SP points to next unused slot
                                  # use 'full_desc' if $SP points to last full slot.

abi_uses_link_register = False    # False if $PC+(default_op_width) is pushed on CALL.
                                  # True if instead it is stored in a link register $LR.

# Can the client create new breakpoints while the program is running?
dynamic_breakpoints = False      

# Can we use an onboard debug module to single-step the CPU?
single_step_supported = False

# Clock speed in Hz
# (Assume default 16 MHz)
clock_freq = 16000000

# Set of values returned by memory report function
mem_list_fmt = [ "SP", "HeapEnd", "HeapStart" ]

general_regs = 0 # Number of general purpose registers r0, r1, r2...

# Register names and order as reported by register-dump op in dbg service.
register_list_fmt = [ "general_regs", "SP", "PC" ]

# Register array as used in CFA records (.debug_frame) for the architecture.
stack_unwind_registers = []

# registers specified by the ABI as caller-saved and OK for callee to clobber.
# We warn when presenting locals that rely on 'unwinding' these registers.
call_clobbered_registers = []
