# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: strmprivacy/api/kafka_clusters/v1/kafka_clusters_v1.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from strmprivacy.api.entities.v1 import entities_v1_pb2 as strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='strmprivacy/api/kafka_clusters/v1/kafka_clusters_v1.proto',
  package='strmprivacy.api.kafka_clusters.v1',
  syntax='proto3',
  serialized_options=b'\n$io.strmprivacy.api.kafka_clusters.v1P\001ZQgithub.com/strmprivacy/api-definitions-go/v2/api/kafka_clusters/v1;kafka_clusters',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n9strmprivacy/api/kafka_clusters/v1/kafka_clusters_v1.proto\x12!strmprivacy.api.kafka_clusters.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a-strmprivacy/api/entities/v1/entities_v1.proto\"3\n\x18ListKafkaClustersRequest\x12\x17\n\nbilling_id\x18\x01 \x01(\tB\x03\xe0\x41\x03\"^\n\x19ListKafkaClustersResponse\x12\x41\n\x0ekafka_clusters\x18\x01 \x03(\x0b\x32).strmprivacy.api.entities.v1.KafkaCluster\"t\n\x19\x44\x65leteKafkaClusterRequest\x12\x17\n\nbilling_id\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12>\n\x03ref\x18\x02 \x01(\x0b\x32,.strmprivacy.api.entities.v1.KafkaClusterRefB\x03\xe0\x41\x02\"\x1c\n\x1a\x44\x65leteKafkaClusterResponse\"]\n\x19\x43reateKafkaClusterRequest\x12@\n\rkafka_cluster\x18\x01 \x01(\x0b\x32).strmprivacy.api.entities.v1.KafkaCluster\"^\n\x1a\x43reateKafkaClusterResponse\x12@\n\rkafka_cluster\x18\x01 \x01(\x0b\x32).strmprivacy.api.entities.v1.KafkaCluster\"q\n\x16GetKafkaClusterRequest\x12\x17\n\nbilling_id\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12>\n\x03ref\x18\x02 \x01(\x0b\x32,.strmprivacy.api.entities.v1.KafkaClusterRefB\x03\xe0\x41\x02\"[\n\x17GetKafkaClusterResponse\x12@\n\rkafka_cluster\x18\x01 \x01(\x0b\x32).strmprivacy.api.entities.v1.KafkaCluster2\xda\x04\n\x14KafkaClustersService\x12\x8e\x01\n\x11ListKafkaClusters\x12;.strmprivacy.api.kafka_clusters.v1.ListKafkaClustersRequest\x1a<.strmprivacy.api.kafka_clusters.v1.ListKafkaClustersResponse\x12\x88\x01\n\x0fGetKafkaCluster\x12\x39.strmprivacy.api.kafka_clusters.v1.GetKafkaClusterRequest\x1a:.strmprivacy.api.kafka_clusters.v1.GetKafkaClusterResponse\x12\x91\x01\n\x12\x44\x65leteKafkaCluster\x12<.strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterRequest\x1a=.strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterResponse\x12\x91\x01\n\x12\x43reateKafkaCluster\x12<.strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterRequest\x1a=.strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterResponseB{\n$io.strmprivacy.api.kafka_clusters.v1P\x01ZQgithub.com/strmprivacy/api-definitions-go/v2/api/kafka_clusters/v1;kafka_clustersb\x06proto3'
  ,
  dependencies=[google_dot_api_dot_field__behavior__pb2.DESCRIPTOR,strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2.DESCRIPTOR,])




_LISTKAFKACLUSTERSREQUEST = _descriptor.Descriptor(
  name='ListKafkaClustersRequest',
  full_name='strmprivacy.api.kafka_clusters.v1.ListKafkaClustersRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='strmprivacy.api.kafka_clusters.v1.ListKafkaClustersRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\340A\003', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=227,
)


_LISTKAFKACLUSTERSRESPONSE = _descriptor.Descriptor(
  name='ListKafkaClustersResponse',
  full_name='strmprivacy.api.kafka_clusters.v1.ListKafkaClustersResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafka_clusters', full_name='strmprivacy.api.kafka_clusters.v1.ListKafkaClustersResponse.kafka_clusters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=229,
  serialized_end=323,
)


_DELETEKAFKACLUSTERREQUEST = _descriptor.Descriptor(
  name='DeleteKafkaClusterRequest',
  full_name='strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\340A\003', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ref', full_name='strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterRequest.ref', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\340A\002', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=325,
  serialized_end=441,
)


_DELETEKAFKACLUSTERRESPONSE = _descriptor.Descriptor(
  name='DeleteKafkaClusterResponse',
  full_name='strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=443,
  serialized_end=471,
)


_CREATEKAFKACLUSTERREQUEST = _descriptor.Descriptor(
  name='CreateKafkaClusterRequest',
  full_name='strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafka_cluster', full_name='strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterRequest.kafka_cluster', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=473,
  serialized_end=566,
)


_CREATEKAFKACLUSTERRESPONSE = _descriptor.Descriptor(
  name='CreateKafkaClusterResponse',
  full_name='strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafka_cluster', full_name='strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterResponse.kafka_cluster', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=568,
  serialized_end=662,
)


_GETKAFKACLUSTERREQUEST = _descriptor.Descriptor(
  name='GetKafkaClusterRequest',
  full_name='strmprivacy.api.kafka_clusters.v1.GetKafkaClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='billing_id', full_name='strmprivacy.api.kafka_clusters.v1.GetKafkaClusterRequest.billing_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\340A\003', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ref', full_name='strmprivacy.api.kafka_clusters.v1.GetKafkaClusterRequest.ref', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\340A\002', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=664,
  serialized_end=777,
)


_GETKAFKACLUSTERRESPONSE = _descriptor.Descriptor(
  name='GetKafkaClusterResponse',
  full_name='strmprivacy.api.kafka_clusters.v1.GetKafkaClusterResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='kafka_cluster', full_name='strmprivacy.api.kafka_clusters.v1.GetKafkaClusterResponse.kafka_cluster', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=779,
  serialized_end=870,
)

_LISTKAFKACLUSTERSRESPONSE.fields_by_name['kafka_clusters'].message_type = strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTER
_DELETEKAFKACLUSTERREQUEST.fields_by_name['ref'].message_type = strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTERREF
_CREATEKAFKACLUSTERREQUEST.fields_by_name['kafka_cluster'].message_type = strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTER
_CREATEKAFKACLUSTERRESPONSE.fields_by_name['kafka_cluster'].message_type = strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTER
_GETKAFKACLUSTERREQUEST.fields_by_name['ref'].message_type = strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTERREF
_GETKAFKACLUSTERRESPONSE.fields_by_name['kafka_cluster'].message_type = strmprivacy_dot_api_dot_entities_dot_v1_dot_entities__v1__pb2._KAFKACLUSTER
DESCRIPTOR.message_types_by_name['ListKafkaClustersRequest'] = _LISTKAFKACLUSTERSREQUEST
DESCRIPTOR.message_types_by_name['ListKafkaClustersResponse'] = _LISTKAFKACLUSTERSRESPONSE
DESCRIPTOR.message_types_by_name['DeleteKafkaClusterRequest'] = _DELETEKAFKACLUSTERREQUEST
DESCRIPTOR.message_types_by_name['DeleteKafkaClusterResponse'] = _DELETEKAFKACLUSTERRESPONSE
DESCRIPTOR.message_types_by_name['CreateKafkaClusterRequest'] = _CREATEKAFKACLUSTERREQUEST
DESCRIPTOR.message_types_by_name['CreateKafkaClusterResponse'] = _CREATEKAFKACLUSTERRESPONSE
DESCRIPTOR.message_types_by_name['GetKafkaClusterRequest'] = _GETKAFKACLUSTERREQUEST
DESCRIPTOR.message_types_by_name['GetKafkaClusterResponse'] = _GETKAFKACLUSTERRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ListKafkaClustersRequest = _reflection.GeneratedProtocolMessageType('ListKafkaClustersRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTKAFKACLUSTERSREQUEST,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.ListKafkaClustersRequest)
  })
_sym_db.RegisterMessage(ListKafkaClustersRequest)

ListKafkaClustersResponse = _reflection.GeneratedProtocolMessageType('ListKafkaClustersResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTKAFKACLUSTERSRESPONSE,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.ListKafkaClustersResponse)
  })
_sym_db.RegisterMessage(ListKafkaClustersResponse)

DeleteKafkaClusterRequest = _reflection.GeneratedProtocolMessageType('DeleteKafkaClusterRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEKAFKACLUSTERREQUEST,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterRequest)
  })
_sym_db.RegisterMessage(DeleteKafkaClusterRequest)

DeleteKafkaClusterResponse = _reflection.GeneratedProtocolMessageType('DeleteKafkaClusterResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEKAFKACLUSTERRESPONSE,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.DeleteKafkaClusterResponse)
  })
_sym_db.RegisterMessage(DeleteKafkaClusterResponse)

CreateKafkaClusterRequest = _reflection.GeneratedProtocolMessageType('CreateKafkaClusterRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKAFKACLUSTERREQUEST,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterRequest)
  })
_sym_db.RegisterMessage(CreateKafkaClusterRequest)

CreateKafkaClusterResponse = _reflection.GeneratedProtocolMessageType('CreateKafkaClusterResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKAFKACLUSTERRESPONSE,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.CreateKafkaClusterResponse)
  })
_sym_db.RegisterMessage(CreateKafkaClusterResponse)

GetKafkaClusterRequest = _reflection.GeneratedProtocolMessageType('GetKafkaClusterRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETKAFKACLUSTERREQUEST,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.GetKafkaClusterRequest)
  })
_sym_db.RegisterMessage(GetKafkaClusterRequest)

GetKafkaClusterResponse = _reflection.GeneratedProtocolMessageType('GetKafkaClusterResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETKAFKACLUSTERRESPONSE,
  '__module__' : 'strmprivacy.api.kafka_clusters.v1.kafka_clusters_v1_pb2'
  # @@protoc_insertion_point(class_scope:strmprivacy.api.kafka_clusters.v1.GetKafkaClusterResponse)
  })
_sym_db.RegisterMessage(GetKafkaClusterResponse)


DESCRIPTOR._options = None
_LISTKAFKACLUSTERSREQUEST.fields_by_name['billing_id']._options = None
_DELETEKAFKACLUSTERREQUEST.fields_by_name['billing_id']._options = None
_DELETEKAFKACLUSTERREQUEST.fields_by_name['ref']._options = None
_GETKAFKACLUSTERREQUEST.fields_by_name['billing_id']._options = None
_GETKAFKACLUSTERREQUEST.fields_by_name['ref']._options = None

_KAFKACLUSTERSSERVICE = _descriptor.ServiceDescriptor(
  name='KafkaClustersService',
  full_name='strmprivacy.api.kafka_clusters.v1.KafkaClustersService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=873,
  serialized_end=1475,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListKafkaClusters',
    full_name='strmprivacy.api.kafka_clusters.v1.KafkaClustersService.ListKafkaClusters',
    index=0,
    containing_service=None,
    input_type=_LISTKAFKACLUSTERSREQUEST,
    output_type=_LISTKAFKACLUSTERSRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetKafkaCluster',
    full_name='strmprivacy.api.kafka_clusters.v1.KafkaClustersService.GetKafkaCluster',
    index=1,
    containing_service=None,
    input_type=_GETKAFKACLUSTERREQUEST,
    output_type=_GETKAFKACLUSTERRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteKafkaCluster',
    full_name='strmprivacy.api.kafka_clusters.v1.KafkaClustersService.DeleteKafkaCluster',
    index=2,
    containing_service=None,
    input_type=_DELETEKAFKACLUSTERREQUEST,
    output_type=_DELETEKAFKACLUSTERRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateKafkaCluster',
    full_name='strmprivacy.api.kafka_clusters.v1.KafkaClustersService.CreateKafkaCluster',
    index=3,
    containing_service=None,
    input_type=_CREATEKAFKACLUSTERREQUEST,
    output_type=_CREATEKAFKACLUSTERRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_KAFKACLUSTERSSERVICE)

DESCRIPTOR.services_by_name['KafkaClustersService'] = _KAFKACLUSTERSSERVICE

# @@protoc_insertion_point(module_scope)
