Metadata-Version: 2.1
Name: JSFetch
Version: 0.0.6
Summary: Lets you make fetch requests in python as you would in JavaScript
Home-page: https://github.com/fschatbot/JSFetch
Author: FSChatBot
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/fschatbot/JSFetch/issues
Keywords: Networking,Javascript,JS,Fetch,Async,AsyncIO,AsyncHTTPClient,AsyncHTTP
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# JSFetch

**JSFetch** is a simple python library that allows you to make HTTP requests in python extaclty the way you would in JavaScript. This allows for sending in requests faster and easier than it's competitors. You also get access to a lot of inbuilt functions to lower the amount of code you need to write.

```python
>>> from jsfetch import fetch
>>> res = fetch("http://httpbin.org/uuid").toJSON()
Promise {<fulfilled>: {…}}
>>> res.then(print)
{uuid: '41ddb42d-5d13-406a-a7f1-8fa0419c9267'}
>>> res.status_code
200
>>> res.headers
{'content-type': 'application/json'}
```

## Installing Requests and Supported Versions

JSFetch is available on PyPI:

```console
$ pip install JSFetch --upgrade
```

JSFetch is currently only tested on Python 3.10 and above.

## Todo

- Static Type the language
- Make the fetch function return a proper promise
- Callbacks to be given more data than just the mapped data
- A fetch class for making requests and returning a promises
- Fetch should be able to be called in top level without async and can be blocking in that use
- Fetch can be awaitable when called in an async function and also not be blocking


