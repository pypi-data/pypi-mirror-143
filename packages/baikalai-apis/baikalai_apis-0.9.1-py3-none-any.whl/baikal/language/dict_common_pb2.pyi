"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DictType(_DictType, metaclass=_DictTypeEnumTypeWrapper):
    """사전의 종류"""
    pass
class _DictType:
    V = typing.NewType('V', builtins.int)
class _DictTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DictType.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TOKEN_INDEX = DictType.V(0)
    """기본 배포사전에 사용되는 포맷
    전송시에는 쓰이지 않는다.
    """

    WORD_LIST = DictType.V(1)
    """고유명사나 복합명사를 표기할 때 사용한다."""

    WORD_LIST_COMPOUND = DictType.V(2)
    """# 전송시에만 사용하고 실제로는 쓰이지 추론시에는 쓰이지 않는다."""


TOKEN_INDEX = DictType.V(0)
"""기본 배포사전에 사용되는 포맷
전송시에는 쓰이지 않는다.
"""

WORD_LIST = DictType.V(1)
"""고유명사나 복합명사를 표기할 때 사용한다."""

WORD_LIST_COMPOUND = DictType.V(2)
"""# 전송시에만 사용하고 실제로는 쓰이지 추론시에는 쓰이지 않는다."""

global___DictType = DictType


class DictSet(google.protobuf.message.Message):
    """메모리 상에서 복합명사나 고유명사를 처리하기 위해서 쓰는 사전
    사전이 map으로 쓰이는 이유는 메모리 상에서 빠르게 사전 데이터의 존재여부를 점검하기
    위한 목적이다.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ITEMS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    type: global___DictType.V = ...
    name: typing.Text = ...
    def __init__(self,
        *,
        items : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        type : global___DictType.V = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","name",b"name","type",b"type"]) -> None: ...
global___DictSet = DictSet
