.\" Man page generated from reStructuredText.
.
.TH "SIERRA" "7" "Mar 20, 2022" "" "SIERRA"
.SH NAME
sierra \- reSearch pIpEline Reusable Robotics Automation (SIERRA)
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
SIERRA is a plugin framework for automating research driven by the scientific
method generally, and for agent\-based research specifically. It supports a wide
range of simulated and real\-robot platforms, and its deeply modular architecture
makes it easy to customize for the needs of a specific research project. SIERRA
can be used with executable code written in any language. SIERRA\(aqs one
restriction is that experimental inputs must be specified in XML in order to be
usable with SIERRA (see ln\-req for details).
.SH PIPELINE SUMMARY
.sp
SIERRA automates the following research pipeline:
.SS 1. Generating experiment inputs
.sp
Experiments using the scientific method have an independent variable whose
impact on results are measured through a series of trials. SIERRA allows you to
express this as a research query on the command line, and then parses your query
to make changes to a template input file to generate launch commands and
experimental inputs to operationalize it. Switching from targeting platform A
(e.g., ARGoS) to platform B (e.g., ROS+Gazebo) is as easy as changing a a single
command line argument (assuming your code is setup to handle both ARGoS and ROS
environments!). Similarly for switching from running on the local machine to
running on a HPC cluster. SIERRA handles all the "backend" aspects of running
experiments and allows you to focus on the fun parts\-\-the research itself!
.SS 2. Running experiments
.sp
SIERRA currently supports two types of execution environments: simulators and
real robots, which are handled seamlessly with GNU parallel. For simulators,
SIERRA will run multiple experimental runs (simulations) from each experiment in
parallel (exact concurrency dependent on the limits of the computing hardware
and the nature of the experiment). For real robots, SIERRA will execution 1
experimental run at a time.
.sp
SIERRA supports multiple HPC environments for execution of experiments in
simulation; see ln\-exec\-env\-hpc for list.
.sp
To add additional HPC environments, see ln\-tutorials\-plugin\-exec\-env\&.
.sp
SIERRA supports multiple real robot targets for running experiments with
different kinds of real robots; see ln\-exec\-env\-robots for list.
.sp
To add additional real robot targets, see ln\-tutorials\-plugin\-exec\-env\&.
.SS 3. Experiment Results Processing
.sp
SIERRA supports a number of data formats which simulations/real robot
experiments can output their data (e.g., the number of robots engaged in a given
task over time) for processing. SIERRA can generate various statistics from the
results such as confidence intervals on observed behavior.
.SS 4. Deliverable Generation
.sp
SIERRA can generate many deliverables from the processed experimental results
automatically (independent of the platform/execution environment!), thus greatly
simplifying reproduction of previous results if you need to tweak a given graph
(for example). SIERRA currently supports generating the following deliverables:
.INDENT 0.0
.IP \(bu 2
Camera\-ready linegraphs, heatmaps, 3D surfaces, and scatterplots directly from
averaged/statistically processed experimental data using matplotlib.
.IP \(bu 2
Videos built from frames captured during simulation or real robot operation.
.IP \(bu 2
Videos built from captured experimental output .csv files.
.UNINDENT
.SS 5. Controller/Scenario Comparison
.sp
SIERRA can take pieces from graphs generated in stage 4 and put them on a
single graph to generate camera\-ready comparison graphs. It can generate
comparison graphs for:
.INDENT 0.0
.IP \(bu 2
Different robot controllers which have all been run in the same scenario.
.IP \(bu 2
A single robot controller which has been run in multiple scenarios.
.UNINDENT
.SH SIERRA PIPELINE
.sp
When invoked SIERRA will run one or more stages of its execution path, as
specified via \fB\-\-pipeline\fP on the cmdline. Only the first 4 pipeline stages
will run by default. The pipeline stages are:
.SS Stage 1: Experiment Generation
.sp
SIERRA generates the Batch Experiment definition from the template
input file, Batch Criteria, and other command line options. Part of
the default pipeline.
.SS Stage 2: Experiment Execution
.sp
SIERRA runs a previously generated Batch Experiment\&. Exactly which batch
experiment SIERRA runs is determined by:
.INDENT 0.0
.IP \(bu 2
\fB\-\-controller\fP
.IP \(bu 2
\fB\-\-scenario\fP
.IP \(bu 2
\fB\-\-sierra\-root\fP
.IP \(bu 2
\fB\-\-template\-input\-file\fP
.IP \(bu 2
\fB\-\-batch\-criteria\fP
.UNINDENT
.sp
SIERRA can run the experiment on any HPC plugin or
Robot plugin\&.  Part of default pipeline.
.SS Stage 3: Experiment Post\-Processing
.sp
SIERRA post\-processes experimental results after running the batch experiment;
some parts of this can be done in parallel. This includes one or more of:
.INDENT 0.0
.IP \(bu 2
Computing statistics over/about experimental data for stage 4 for use in graph
generation in stage 4. See ln\-usage\-cli documentation for
\fB\-\-dist\-stats\fP for details.
.IP \(bu 2
Creating images from project \fB\&.csv\fP files for rendering in stage 4. See
ln\-usage\-rendering\-project for details.
.UNINDENT
.sp
Part of default pipeline.
.SS Stage 4: Deliverable Generation
.sp
SIERRA performs deliverable generation after processing results for a batch
experiment, which can include shiny graphs and videos. See
ln\-usage\-vc for details about rendering capabilities.
.sp
Part of default pipeline.
.SS Stage 5: Graph Generation for Controller/Scenario Comparison
.sp
SIERRA can perform additional graph generation \fIAFTER\fP graph generation for
batch experiments has been run. This is extremely useful for generating graphs
which can be dropped immediately into academic papers without modification. Not
part of default pipeline. See ln\-usage\-stage5 for details. This can be
used to:
.INDENT 0.0
.IP \(bu 2
Compare multiple controllers within the same \fB\-\-scenario\fP\&. See
ln\-usage\-stage5\-intra\-scenario for details.
.IP \(bu 2
Compare a single \fB\-\-controller\fP across multiple scenarios. See
ln\-usage\-stage5\-inter\-scenario for details.
.UNINDENT
.SH EXTERNALLY CONFIGURABLE SIERRA VARIABLES
.sp
Non\-Batch Criteria variables which you can use to configure
simulations. All batch criteria are variables, but not all variables are batch
criteria.
.INDENT 0.0
.IP \(bu 2
\fI\%Time Setup\fP
.UNINDENT
.SS Experiment Setup
.sp
Configure Experiment time: length, controller cadence (Tick
duration/timestep), and how many datapoints to capture per Experimental
Run\&.
.SS Cmdline Syntax
.sp
\fBT{duration}[.K{ticks_per_sec}][.N{n_datapoints}\fP
.INDENT 0.0
.IP \(bu 2
\fBduration\fP \- Duration of timesteps in \fIseconds\fP (not timesteps).
.IP \(bu 2
\fBticks_per_sec\fP \- How many times each controller will be run per second.
.IP \(bu 2
\fBn_datapoints\fP \- # datapoints per Experimental Run, to be captured;
the capture interval (if configurable) should be adjusted in
Project\-derived class from the platform \fBExpSetup\fP class
(\fBExpSetup\fP for
ARGoS).
.UNINDENT
.SS Examples
.INDENT 0.0
.IP \(bu 2
\fBexp_setup.T1000\fP: Experimental run will be 1,000 seconds long and have
1,000*5=5,000 timesteps, with default (50) # datapoints.
.IP \(bu 2
\fBexp_setup.T2000.N100\fP: Experimental run will be 2,000 seconds long and
have 2,000*5=10,000 timesteps, with 100 datapoints (1 every 20 seconds/100
timesteps).
.IP \(bu 2
\fBexp_setup.T10000.K10\fP: Experimental run will be 10,000 seconds long, and
have 10,000*10=100,000 timesteps with default (50) # datapoints.
.IP \(bu 2
\fBexp_setup.T10000.K10.N100\fP: Experimental run will be 10,000 seconds long,
and have 10,000*10=100,000 timesteps, with 100 datapoints (one every 100
seconds/1,000 timesteps).
.UNINDENT
.SH SIERRA RUNTIME DIRECTORY TREE
.sp
\fBIMPORTANT:\fP
.INDENT 0.0
.INDENT 3.5
SIERRA \fBNEVER\fP deletes directories for you.
.sp
Subsequent experiments using the same values for the following cmdline
arguments \fBWILL\fP result in the same calculated root directory for
experimental inputs and outputs, even if other parameters change (or if you
change the contents of the template input file):
.INDENT 0.0
.IP \(bu 2
\fB\-\-controller\fP
.IP \(bu 2
\fB\-\-scenario\fP
.IP \(bu 2
\fB\-\-sierra\-root\fP
.IP \(bu 2
\fB\-\-template\-input\-file\fP
.IP \(bu 2
\fB\-\-batch\-criteria\fP
.UNINDENT
.sp
SIERRA will abort stage {1,2} processing when this occurs in order to
preserve data integrity; this behavior can be overwridden with
\fB\-\-exp\-overwrite\fP, in which case the use assumes full responsibility for
ensuring the integrity of the experiment.
.sp
Always better to check the arguments before hitting ENTER. Measure twice, cut
once, as the saying goes.
.UNINDENT
.UNINDENT
.SS Default Pipeline Directory Tree (Stages 1\-4)
.sp
When SIERRA runs stages 1\-4, it creates a directory structure under whatever was
passed as \fB\-\-sierra\-root\fP\&. For the purposes of explanation, I will use the
following partial SIERRA option set to explain the experiment tree:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-sierra\-root=$HOME/exp\e
\-\-controller=CATEGORY.my_controller\e
\-\-scenario=SS.12x6\e
\-\-platform=platform.argos\e
\-\-batch\-criteria=population_size.Log8\e
\-\-n\-runs=4\e
\-\-template\-input\-file=~/my\-template.argos\e
\-\-project=fordyca
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This invocation will cause SIERRA to create the following directory structure as
it runs:
.INDENT 0.0
.IP \(bu 2
\fB$HOME/exp\fP \- This is the root of the directory structure (\fB\-\-sierra\-root\fP),
and is \fBNOT\fP deleted on subsequent runs.
.INDENT 2.0
.IP \(bu 2
\fBfordyca\fP \- Each project gets their own directory, so you can disambiguate
otherwise identical SIERRA invocations and don\(aqt overwrite the directories
for a previously used project on subsequent runs.
.INDENT 2.0
.IP \(bu 2
\fBCATEGORY.my_controller\fP \- Each controller gets their own directory in the
project root, which is \fBNOT\fP deleted on subsequent runs.
.INDENT 2.0
.IP \(bu 2
\fBmytemplate\-SS.12x6\fP \- The directory for the Batch Experiment
is named from a combination of the template input file used
(\fB\-\-template\-input\-file\fP) and the scenario (\fB\-\-scenario\fP).
.INDENT 2.0
.IP \(bu 2
\fBexp\-inputs\fP \- Root directory for Experimental
inputs; each experiment in the batch gets their own directory in here.
.INDENT 2.0
.IP \(bu 2
\fBexp0\fP \- Within the input directory for each experiment in the
batch (there are 4 such directories in this example), there will be
an input file for each Experimental Run in the experiment,
as well as a \fBcommands.txt\fP used by GNU parallel to run them all
in parallel. The leaf of the \fB\-\-template\-input\-file\fP, sans
extension, has the experimental run # appended to it
(e.g. \fBmy\-template_0.argos\fP is the input file for simulation 0).
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBcommands.txt\fP
.IP \(bu 2
\fBmy\-template_0.argos\fP
.IP \(bu 2
\fBmy\-template_1.argos\fP
.IP \(bu 2
\fBmy\-template_2.argos\fP
.IP \(bu 2
\fBmy\-template_3.argos\fP
.UNINDENT
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBexp1\fP
.INDENT 2.0
.IP \(bu 2
\fBmy\-template_0.argos\fP
.IP \(bu 2
\fBmy\-template_1.argos\fP
.IP \(bu 2
\fBmy\-template_2.argos\fP
.IP \(bu 2
\fBmy\-template_3.argos\fP
.UNINDENT
.IP \(bu 2
\fBexp2\fP
.INDENT 2.0
.IP \(bu 2
\fB\&...\fP
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBexp\-outputs\fP \- Root directory for experimental outputs; each
experiment gets their own directory in here (just like for experiment
inputs). Directory name is controlled by the main YAML configuration.
.INDENT 2.0
.IP \(bu 2
\fBexp0\fP \- Within the output directory for each experiment in the
batch (there are 3 such directories in this example), there will be
a \fIdirectory\fP (rather than a file, as was the case for inputs) for
each experimental run\(aqs output, including metrics, grabbed frames,
etc., as configured in the XML input file.
.INDENT 2.0
.IP \(bu 2
\fBmy\-template_0.argos\fP
.IP \(bu 2
\fBmy\-template_1.argos\fP
.IP \(bu 2
\fBmy\-template_2.argos\fP
.IP \(bu 2
\fBmy\-template_3.argos\fP
.UNINDENT
.IP \(bu 2
\fBexp1\fP
.INDENT 2.0
.IP \(bu 2
\fBmy\-template_0.argos\fP
.IP \(bu 2
\fBmy\-template_1.argos\fP
.IP \(bu 2
\fBmy\-template_2.argos\fP
.IP \(bu 2
\fBmy\-template_3.argos\fP
.UNINDENT
.IP \(bu 2
\fBexp2\fP
.INDENT 2.0
.IP \(bu 2
\fB\&...\fP
.UNINDENT
.IP \(bu 2
\fBstatistics\fP \- Root directory for holding statistics calculated
during stage3 for use during stage4.
.INDENT 2.0
.IP \(bu 2
\fBexp0\fP \- Contains the averaged \fB\&.csv\fP results from exp0.
.IP \(bu 2
\fBexp1\fP
.IP \(bu 2
\fBexp2\fP
.IP \(bu 2
\fB\&...\fP
.IP \(bu 2
\fBcollated\fP \- Contains Collated .csv files. During
stage4, SIERRA will draw specific columns from .csv files under
\fBstatistics\fP according to configuration, and collate them under
here for graph generation of \fIinter\fP\-experiment graphs.
.IP \(bu 2
\fBexec\fP \- Statistics about SIERRA runtime. Useful for capturing
runtime of specific experiments to better plan/schedule time on
HPC clusters.
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBimagize\fP \- Root directory for holding imagized files (averaged run
outputs which have been converted to graphs) which can be patched
together in stage 4 to generated videos. Each experiment will get its
own directory under here, with unique sub\-directories for each
different type of Experimental Run data captured for
imagizing. See ln\-usage\-rendering\-project for more details.
.IP \(bu 2
\fBvideos\fP \- Root directory for holding rendered videos generated
during stage 4 from either captured simulator frames for imagized
project files. Each experiment will get its own directory under here,
with See ln\-usage\-vc for more details.
.IP \(bu 2
\fBmodels\fP \- During stage4, the dataframes generated by all executed
models are stored under this directory. Each experiment in the batch
gets their own directory for \fIintra\fP\-experiment models.
.IP \(bu 2
\fBgraphs\fP \- During stage4, all generated graphs are output under this
directory. Each experiment in the batch gets their own directory for
\fIintra\fP\-experiment graphs.
.INDENT 2.0
.IP \(bu 2
\fBexp0\fP
.IP \(bu 2
\fBexp1\fP
.IP \(bu 2
\fBexp2\fP
.IP \(bu 2
\fBexp3\fP
.IP \(bu 2
\fBcollated\fP \- Graphs which are generated across experiments in the
batch from collated .csv data, rather than from the averaged results
within each experiment, are output here.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Stage 5 Directory Tree
.sp
When SIERRA runs stage 5, stages 1\-4 must have already been successfully run,
and therefore the directory tree shown above will exist. For the purposes of
explanation, I will use the following partial SIERRA option sets to explain the
additional to the experiment tree.
.sp
First, the experiment tree for \fIscenario comparison\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-pipeline 5\e
\-\-scenario\-comparison\e
\-\-batch\-criteria population_size.Log8\e
\-\-scenarios\-list=RN.16x16x2,PL.16x16x2\e
\-\-sierra\-root=$HOME/exp"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This invocation will cause SIERRA to create the following directory structure as
it runs:
.INDENT 0.0
.IP \(bu 2
\fB$HOME/exp\fP
.INDENT 2.0
.IP \(bu 2
\fBRN.16x16x2+PL.16x16x2\-sc\-graphs\fP
.sp
This is the directory holding the comparison graphs for all controllers
which were previously run on the scenarios \fBRN.16x16x2\fP and \fBPL.16x16x2\fP
(scenario names are arbitrary for the purposes of stage 5 and entirely
depend on the project). Inside this directory will be all graphs generated
according to the configuration specified in
ln\-tutorials\-project\-stage5\-config\&.
.UNINDENT
.UNINDENT
.sp
Second, the experiment tree for \fIcontroller comparison\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-pipeline 5\e
\-\-controller\-comparison\e
\-\-batch\-criteria population_size.Log8\e
\-\-controllers\-list d0.CRW,d0.DPO\e
\-\-sierra\-root=$HOME/exp"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This invocation will cause SIERRA to create the following directory structure as
it runs:
.INDENT 0.0
.IP \(bu 2
\fB$HOME/exp\fP
.INDENT 2.0
.IP \(bu 2
\fBd0.CRW+d0.DPO\-cc\-graphs\fP
.sp
This is the directory holding the comparison graphs for each scenario for
which \fBd0.CRW\fP and \fBd0.DPO\fP were run (scenarios are computed by
examining the directory tree for stages 1\-4). Controller names are arbitrary
for the purposes of stage 5 and entirely depend on the project). Inside this
directory will be all graphs generated according to the configuration
specified in ln\-tutorials\-project\-stage5\-config\&.
.UNINDENT
.UNINDENT
.SH VISUAL CAPTURE
.sp
SIERRA\(aqs capabilities for capturing frames during Experimental Runs and rendering them input video outputs are detailed in this
section.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Using BOTH the platform and project rendering capabilities
simultaneously IS possible, but discouraged unless you have multiple
terrabytes of disk space available. In general when using SIERRA\(aqs rendering
capabilities, \fB\-\-exp\-range\fP is your friend.
.UNINDENT
.UNINDENT
.SS Platform Visual Capture
.sp
SIERRA can direct some platforms to capture frames during
experiments. \fB\-\-platform\-vc\fP assumes that:
.INDENT 0.0
.IP \(bu 2
\fBffmpeg\fP is installed/can be found by the shell. Checked during stage
3 if imagizing is run.
.UNINDENT
.sp
This is applicable to the following platforms:
.INDENT 0.0
.IP \(bu 2
ARGoS, selected via \fB\-\-platform=platform.argos\fP\&.
.UNINDENT
.sp
\fBIMPORTANT:\fP
.INDENT 0.0
.INDENT 3.5
If the selected platform usually runs headless, then this option
will probably slow things down a LOT, so if you use it,
\fB\-\-n\-runs\fP should probably be low, unless you have gobs of
computing power available.
.UNINDENT
.UNINDENT
.SS ARGos Visual Capture
.sp
Visual capture in ARGoS is done via frame capturing while running, and
then the captured images stitched together into videos during stage 4.
.sp
During stage 1 \fB\-\-platform\-vc\fP causes the ARGoS Qt/OpenGL
\fB<visualization>\fP subtree to be added to the \fB\-\-template\-input\-file\fP when
generating experimental inputs; it is removed otherwise. If \fB<visualization>\fP
already exists, it is removed and re\-created. During stage 1 SIERRA assumes
that:
.INDENT 0.0
.IP \(bu 2
\fBXvfb\fP is installed/can be found by the shell (checked). This is
needed to get ARGoS to "render" its simulation into an offscreen buffer which
we can output to a file.
.UNINDENT
.sp
During stage 4, \fB\-\-platform\-vc\fP causes frames captured during stage 2 to be
stitched together into a unique video file using \fBffmpeg\fP (precise
command configurable via \fB\-\-render\-cmd\-opts\fP), and output to
\fB<batch_root>/videos/<exp>\fP\&.
.SS Project Rendering
.sp
Projects can generate \fB\&.csv\fP files residing in subdirectories within the
\fBmain.run_metrics_leaf\fP (see ln\-tutorials\-project\-main\-config)
directory (directory path set on a per \fB\-\-project\fP basis) for each
experimental run, in addition to generating \fB\&.csv\fP files residing directly in
the \fBmain.run_metrics_leaf.\fP directory. SIERRA can then render these \fB\&.csv\fP
files into \fBHeatmap\fP graphs, and stitch these
images together to make videos.
.sp
To use, do the following:
.INDENT 0.0
.IP 1. 3
Pass \fB\-\-project\-imagizing\fP during stage 3. When passed, the \fB\&.csv\fP files
residing each subdirectory under the \fBmain.run_metrics_leaf\fP directory (no
recursive nesting is allowed) in each run are treated as snapshots of 2D or
3D data over time, and will be averaged together across runs and then turn
into image files suitable for video rendering in stage 4. The following
restrictions apply:
.INDENT 3.0
.IP \(bu 2
A common stem with a unique numeric ID is required for each \fB\&.csv\fP must
be present for each \fB\&.csv\fP\&.
.IP \(bu 2
The directory name within \fBmain.run_metrics_leaf\fP must be the same as the
stem for each \fB\&.csv\fP file in that directory. For example, if the
directory name was \fBswarm\-distribution\fP under \fBmain.run_metrics_leaf\fP
then all \fB\&.csv\fP files within that directory must be named according to
\fBswarm\-distribution/swarm\-distributionXXXXX.csv\fP, where XXXXX is any
length numeric prefix (possibly preceded by an underscore or dash).
.UNINDENT
.sp
\fBIMPORTANT:\fP
.INDENT 3.0
.INDENT 3.5
Averaging the image \fB\&.csv\fP files and generating the images for each
experiment does not happen automatically as part of stage 3 because it can
take a LONG time and is idempotent. You should only pass
\fB\-\-project\-imagizing\fP the first time you run stage 3 after running stage
2 (unless you are getting paid by the hour).
.UNINDENT
.UNINDENT
.IP 2. 3
Pass \fB\-\-project\-vc\fP during stage 4 after running imagizing via
\fB\-\-project\-imagizing\fP during stage 3, either on the same invocation or a
previous one. SIERRA will take the imagized \fB\&.csv\fP files previously created
and generate a set of a videos in \fB<batch_root>/videos/<exp>\fP for each
experiment in the batch which was run.
.sp
\fBIMPORTANT:\fP
.INDENT 3.0
.INDENT 3.5
Rendering the imagized \fB\&.csv\fP does not happen automatically every time
as part of stage 4 because it can take a LONG time and is idempotent. You
should only pass \fB\-\-project\-vc\fP the first time you run stage 4 after
having run stage 3 with \fB\-\-project\-vc\fP (unless you are getting paid by
the hour).
.UNINDENT
.UNINDENT
.UNINDENT
.SH COMMAND LINE INTERFACE
.sp
Unless an option says otherwise, it is applicable to all batch criteria. That
is, option batch criteria applicability is only documented for options which
apply to a subset of the available Batch Criteria\&.
.sp
If an option is given more than once on the command line, the last such
occurrence is used.
.SS SIERRA Core
.sp
These options are for all Platforms\&.
.SS Multi\-stage Options
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: sierra\-cli [\-\-project PROJECT] [\-\-log\-level {INFO,DEBUG,TRACE}] [\-\-platform PLATFORM] [\-\-exec\-env EXEC_ENV] [\-\-template\-input\-file filepath] [\-\-exp\-overwrite]
                  [\-\-sierra\-root dirpath] [\-\-batch\-criteria [<category>.<definition>,...] [[<category>.<definition>,...] ...]] [\-\-pipeline [stages ...]] [\-\-exp\-range EXP_RANGE]
                  [\-\-platform\-vc] [\-\-serial\-processing] [\-\-n\-runs N_RUNS] [\-\-no\-collate]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Bootstrap options
.sp
Bare\-bones options for bootstrapping SIERRA
.INDENT 0.0
.TP
.B\-\-project
.INDENT 7.0
.INDENT 3.5
Specify which Project to load.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2,3,4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-log\-level
Possible choices: INFO, DEBUG, TRACE
.INDENT 7.0
.INDENT 3.5
The level of loggingto use when running
SIERRA.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2,3,4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "INFO"
.TP
.B\-\-platform
.INDENT 7.0
.INDENT 3.5
This argument defines the Platform you
want to run experiments on.
.sp
The value of this argument determines the
execution environment for experiments; different
platforms (e.g., simulator, real robots) will
have different configuration options.
.sp
Valid values can be any folder name inside a
folder on the \fI\%SIERRA_PLUGIN_PATH\fP (with
\fB/\fP replaced with \fB\&.\fP as you would expect for
using path names to address python packages). The
platforms which come with SIERRA are:
.INDENT 0.0
.IP \(bu 2
\fBplatform.argos\fP \- This directs SIERRA to run
experiments using the ARGoS
simulator. Selecting this platform assumes your
code has been developed and configured for
ARGoS.
.IP \(bu 2
\fBplatform.rosgazebo\fP \- This directs SIERRA to
run experiments using the Gazebo
simulator and ROS\&. Selecting this
platform assumes your code has been developed
and configured for Gazebo and ROS.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Default: "platform.argos"
.TP
.B\-\-exec\-env
.INDENT 7.0
.INDENT 3.5
This argument defines \fIhow\fP experiments are going
to be run, using the \fB\-\-platform\fP you have
selected.
.sp
Valid values can be any folder name inside a
folder on the \fI\%SIERRA_PLUGIN_PATH\fP (with
\fB/\fP replaced with \fB\&.\fP as you would expect for
using path names to address python packages). The
execution environments which come with SIERRA
are:
.INDENT 0.0
.IP \(bu 2
\fBhpc.local\fP \- This directs SIERRA to run
experiments on the local machine. See
ln\-hpc\-plugins\-local for a detailed
description.
.IP \(bu 2
\fBhpc.pbs\fP \- The directs SIERRA to run
experiments spread across multiple allocated
nodes in an HPC computing environment managed
by TORQUE\-PBS. See ln\-hpc\-plugins\-pbs
for a detailed description.
.IP \(bu 2
\fBhpc.slurm\fP \- The directs SIERRA to run
experiments spread across multiple allocated
nodes in an HPC computing environment managed
by SLURM. See ln\-hpc\-plugins\-slurm for a
detailed description.
.IP \(bu 2
\fBhpc.adhoc\fP \- This will direct SIERRA to run
experiments on an ad\-hoc network of
computers. See ln\-hpc\-plugins\-adhoc for
a detailed description.
.IP \(bu 2
\fBrobots.turtlebot\fP \- This will direct SIERRA
to run experiments on real Turtlebots.
.UNINDENT
.sp
Not all platforms support all execution
environments.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "hpc.local"
.UNINDENT
.SS Multi\-stage options
.sp
Options which are used in multiple pipeline stages
.INDENT 0.0
.TP
.B\-\-template\-input\-file
.INDENT 7.0
.INDENT 3.5
The template \fB\&.xml\fP input file for the
batch experiment. Beyond the requirements
for the specific \fB\-\-platform\fP, the
content of the file can be any valid XML,
with the exception of the SIERRA
requirements detailed in
ln\-tutorials\-project\-template\-input\-file\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2,3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-exp\-overwrite
.INDENT 7.0
.INDENT 3.5
When SIERRA calculates the batch experiment
root (or any child path in the batch
experiment root) during stage {1, 2}, if
the calculated path already exists it is
treated as a fatal error and no
modifications to the filesystem are
performed. This flag overwrides the default
behavior. Provided to avoid accidentally
overwrite input/output files for an
experiment, forcing the user to be explicit
with potentially dangerous actions.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-sierra\-root
.INDENT 7.0
.INDENT 3.5
Root directory for all SIERRA generated and
created files.
.sp
Subdirectories for controllers, scenarios,
experiment/experimental run inputs/outputs
will be created in this directory as
needed. Can persist between invocations of
SIERRA.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2,3,4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "<home directory>/exp"
.TP
.B\-\-batch\-criteria
.INDENT 7.0
.INDENT 3.5
Definition of criteria(s) to use to define
the experiment.
.sp
Specified as a list of 0 or 1 space
separated strings, each with the following
general structure:
.sp
\fB<category>.<definition>\fP
.sp
\fB<category>\fP must be a filename from the
\fBcore/variables/\fP or from a \fB\-\-project\fP
\fB<project>/variables/\fP directory, and
\fB<definition>\fP must be a parsable namne
(according to the requirements of the
criteria defined by the parser for
\fB<category>\fP).
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2,3,4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: []
.TP
.B\-\-pipeline
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
Define which stages of the experimental
pipeline to run:
.INDENT 0.0
.IP \(bu 2
Stage1: Generate the experiment
definition from the template input file,
batch criteria, and other command line
options. Part of default pipeline.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
Stage2: Run a previously generated
experiment. Part of default pipeline.
.IP \(bu 2
Stage3: Post\-process experimental results
after running the batch experiment; some
parts of this can be done in
parallel. Part of default pipeline.
.IP \(bu 2
Stage4: Perform deliverable generation
after processing results for a batch
experiment, which can include shiny graphs
and videos. Part of default pipeline.
.IP \(bu 2
Stage5: Perform graph generation for
comparing controllers AFTER graph
generation for batch experiments has
been run. Not part of default pipeline.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Default: [1, 2, 3, 4]
.TP
.B\-\-exp\-range
.INDENT 7.0
.INDENT 3.5
Set the experiment numbers from the batch to
run, average, generate intra\-experiment
graphs from, or generate inter\-experiment
graphs from (0 based). Specified in the form
\fBmin_exp_num:max_exp_num\fP (closed
interval/inclusive). If omitted, runs,
averages, and generates intra\-experiment and
inter\-experiment performance measure graphs
for all experiments in the batch (default
behavior).
.sp
This is useful to re\-run part of a batch
experiment in HPC environments if SIERRA
gets killed before it finishes running all
experiments in the batch, or to redo a
single experiment with real robots which
failed for some reason.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{2,3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-platform\-vc
.INDENT 7.0
.INDENT 3.5
For applicable \fB\-\-platforms\fP, enable
visual capturing of run\-time data during
stage 2. This data can be frames (i.e., .png
files), or rendering videos, depending on
the platform. If the captured data was
frames, then SIERRA can render the captured
frames into videos during stage 4. If the
selected \fB\-\-platform\fP does not support
visual capture, then this option has no
effect. See ln\-usage\-vc\-platform for
full details.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-serial\-processing
.INDENT 7.0
.INDENT 3.5
If TRUE, then results processing/graph
generation will be performed serially,
rather than using parallellism where
possible.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-n\-runs
.INDENT 7.0
.INDENT 3.5
The # of experimental runs that will be run
and their results averaged to form the
result of a single experiment within a
batch.
.sp
If \fB\-\-platform\fP is a simulator and
\fB\-\-exec\-env\fP is something other than
\fBhpc.local\fP then it will be used to
determine the concurrency of experimental runs.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-no\-collate
.INDENT 7.0
.INDENT 3.5
Specify that no collation of data across
experiments within a batch (stage 4) or
across runs within an experiment (stage 3)
should be performed. Useful if collation
takes a long time and multiple types of
stage 4 outputs are desired.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS Stage1: Generating Experiments
.sp
None for the moment.
.SS Stage2: Running Experiments
.sp
None for the moment.
.SS Stage3: Processing Experiment Results
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-\-no\-verify\-results] [\-\-storage\-medium {storage.csv}] [\-\-dist\-stats {none,all,conf95,bw}] [\-\-processing\-mem\-limit PROCESSING_MEM_LIMIT]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Stage3: General options for eprocessing experiment results
.INDENT 0.0
.TP
.B\-\-no\-verify\-results
.INDENT 7.0
.INDENT 3.5
If passed, then the verification step will be
skipped during experimental results processing,
and outputs will be averaged directly. If not
all the corresponding \fB\&.csv\fP files in all
experiments generated the same # rows, then
SIERRA will (probably) crash during experiments
exist and/or have the stage4. Verification can
take a long time with large # of runs per
experiment.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-storage\-medium
Possible choices: storage.csv
.INDENT 7.0
.INDENT 3.5
Specify the storage medium for
Experimental Run outputs, so that
SIERRA can select an appropriate plugin to read
them. Any plugin under \fBplugins/storage\fP can
be used, but the ones that come with SIERRA
are:
.INDENT 0.0
.TP
.B \fBstorage.csv\fP \- Experimental run outputs are
stored in a per\-run directory
as one or more \fB\&.csv\fP
files.
.UNINDENT
.sp
Regardless of the value of this option, SIERRA
always generates \fB\&.csv\fP files as it runs and
averages outputs, generates graphs, etc.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "storage.csv"
.TP
.B\-\-dist\-stats
Possible choices: none, all, conf95, bw
.INDENT 7.0
.INDENT 3.5
Specify what kinds of statistics, if any,
should be calculated on the distribution of
experimental data during stage 3 for inclusion
on graphs during stage 4:
.INDENT 0.0
.IP \(bu 2
\fBnone\fP \- Only calculate and show raw mean
on graphs.
.IP \(bu 2
\fBconf95\fP \- Calculate standard deviation of
experimental distribution and show 95%
confidence interval on relevant graphs.
.IP \(bu 2
\fBbw\fP \- Calculate statistics necessary to
show box and whisker plots around each point
in the graph
(\fBSummaryLineGraph\fP
only).
.IP \(bu 2
\fBall\fP \- Generate all possible statistics,
and plot all possible statistics on graphs.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBSummaryLineGraph\fP
.IP \(bu 2
\fBStackedLineGraph\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "none"
.TP
.B\-\-processing\-mem\-limit
.INDENT 7.0
.INDENT 3.5
Specify, as a percent in [0,100], how much
memory SIERRA should try to limit itself to
using.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: 90
.UNINDENT
.SS Stage4: Deliverable Generation
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-\-exp\-graphs {intra,inter,all,none}] [\-\-project\-no\-yaml\-LN] [\-\-project\-no\-yaml\-HM] [\-\-plot\-log\-xscale] [\-\-plot\-enumerated\-xscale] [\-\-plot\-log\-yscale]
              [\-\-plot\-regression\-lines PLOT_REGRESSION_LINES] [\-\-plot\-primary\-axis PLOT_PRIMARY_AXIS] [\-\-plot\-large\-text] [\-\-models\-disable] [\-\-render\-cmd\-opts RENDER_CMD_OPTS]
              [\-\-project\-imagizing] [\-\-project\-rendering]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Stage4: General options for generating graphs
.INDENT 0.0
.TP
.B\-\-exp\-graphs
Possible choices: intra, inter, all, none
.INDENT 7.0
.INDENT 3.5
Specify which types of graphs should be
generated from experimental results:
.INDENT 0.0
.IP \(bu 2
\fBintra\fP \- Generate intra\-experiment graphs
from the results of a single experiment
within a batch, for each experiment in the
batch (this can take a long time with large
batch experiments). If any intra\-experiment
models are defined and enabled, those are run
and the results placed on appropriate graphs.
.IP \(bu 2
\fBinter\fP \- Generate inter\-experiment graphs
_across_ the results of all experiments in a
batch. These are very fast to generate,
regardless of batch experiment size. If any
inter\-experiment models are defined and
enabled, those are run and the results placed
on appropriate graphs.
.IP \(bu 2
\fBall\fP \- Generate all types of graphs.
.IP \(bu 2
\fBnone\fP \- Skip graph generation; provided to
skip graph generation if only video outputs
are desired.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "all"
.TP
.B\-\-project\-no\-yaml\-LN
.INDENT 7.0
.INDENT 3.5
Specify that the intra\-experiment and
inter\-experiment linegraphs defined in project
YAML configuration should not be
generated. Useful if you are working on
something which results in the generation of
other types of graphs, and the generation of
those linegraphs is not currently needed only
slows down your development cycle.
.sp
Performance measure, model linegraphs are still
generated, if applicable.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-project\-no\-yaml\-HM
.INDENT 7.0
.INDENT 3.5
Specify that the intra\-experiment heatmaps
defined in project YAML configuration should
not be generated. Useful if you are working on
something which results in the generation of
other types of graphs, and the generation of
heatmaps only slows down your development
cycle.
.sp
Model heatmaps are still generated, if
applicable.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS Stage4: Plotting Options
.INDENT 0.0
.TP
.B\-\-plot\-log\-xscale
.INDENT 7.0
.INDENT 3.5
Place the set of X values used to generate intra\- and
inter\-experiment graphs into the logarithmic
space. Mainly useful when the batch criteria involves
large swarm sizes, so that the plots are more
readable.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBSummaryLineGraph\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-plot\-enumerated\-xscale
.INDENT 7.0
.INDENT 3.5
Instead of using the values generated by a given
batch criteria for the X values, use an enumerated
list [0,...,len(X value) \- 1]. Mainly useful when the
batch criteria involves large swarm sizes, so that
the plots are more readable.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBSummaryLineGraph\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-plot\-log\-yscale
.INDENT 7.0
.INDENT 3.5
Place the set of Y values used to generate intra\- and
inter\-experiment graphs into the logarithmic
space. Mainly useful when the batch criteria involves
large swarm sizes, so that the plots are more
readable.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBSummaryLineGraph\fP
.IP \(bu 2
\fBStackedLineGraph\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4,5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-plot\-regression\-lines
.INDENT 7.0
.INDENT 3.5
For all 2D generated scatterplots, plot a linear
regression line and the equation of the line to the
legend.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBSummaryLineGraph\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-plot\-primary\-axis
.INDENT 7.0
.INDENT 3.5
This option allows you to override the primary axis,
which is normally is computed based on the batch
criteria.
.sp
For example, in a bivariate batch criteria composed
of
.INDENT 0.0
.IP \(bu 2
ln\-platform\-argos\-bc\-population\-size on the
X axis (rows)
.IP \(bu 2
ln\-platform\-argos\-bc\-saa\-noise on the Y axis
(columns)
.UNINDENT
.sp
Swarm metrics will be calculated by \fIcomputing\fP
across .csv rows and \fIprojecting\fP down the columns by
default, since swarm size will only vary within a
row. Passing a value of 1 to this option will
override this calculation, which can be useful in
bivariate batch criteria in which you are interested
in the effect of the OTHER non\-size criteria on
various performance measures.
.sp
0=criteria of interest varies across \fIrows\fP\&.
.sp
1=criteria of interest varies across \fIcolumns\fP\&.
.sp
This option only affects
\fBBivarBatchCriteria\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBHeatmap\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-plot\-large\-text
.INDENT 7.0
.INDENT 3.5
This option specifies that the title, X/Y axis
labels/tick labels should be larger than the SIERRA
default. This is useful when generating graphs
suitable for two column paper format where the
default text size for rendered graphs will be too
small to see easily. The SIERRA defaults are
generally fine for the one column/journal paper
format.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS Models
.INDENT 0.0
.TP
.B\-\-models\-disable
.INDENT 7.0
.INDENT 3.5
Disables running of all models, even if they appear
in the project config file.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS Stage4: Rendering (see also stage1 rendering options)
.INDENT 0.0
.TP
.B\-\-render\-cmd\-opts
.INDENT 7.0
.INDENT 3.5
Specify the \fBffmpeg\fP options to appear
between the specification of the input image
files and the specification of the output
file. The default is suitable for use with ARGoS
frame grabbing set to a frames size of 1600x1200
to output a reasonable quality video.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "\-r 10 \-s:v 800x600 \-c:v libx264 \-crf 25 \-filter:v scale=\-2:956 \-pix_fmt yuv420p"
.TP
.B\-\-project\-imagizing
.INDENT 7.0
.INDENT 3.5
Enable generation of image files from \fB\&.csv\fP
files captured during stage 2 and averaged during
stage 3 for each experiment. See
ln\-usage\-rendering\-project for details and
restrictions.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{3,4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-project\-rendering
.INDENT 7.0
.INDENT 3.5
Enable generation of videos from imagized
\fB\&.csv\fP files created as a result of
\fB\-\-project\-imagizing\fP\&. See
ln\-usage\-rendering\-project for details.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{4}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS Stage5: Comparing Controllers
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-\-controllers\-list CONTROLLERS_LIST] [\-\-controllers\-legend CONTROLLERS_LEGEND] [\-\-scenarios\-list SCENARIOS_LIST] [\-\-scenarios\-legend SCENARIOS_LEGEND]
              [\-\-scenario\-comparison] [\-\-controller\-comparison] [\-\-comparison\-type {LNraw,HMraw,HMdiff,HMscale,SUraw,SUscale,SUdiff}] [\-\-bc\-univar] [\-\-bc\-bivar] [\-\-transpose\-graphs]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Stage5: General options for controller comparison
.INDENT 0.0
.TP
.B\-\-controllers\-list
.INDENT 7.0
.INDENT 3.5
Comma separated list of controllers to compare
within \fB\-\-sierra\-root\fP\&.
.sp
The first controller in this list will be used
for as the controller of primary interest if
\fB\-\-comparison\-type\fP is passed.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-controllers\-legend
.INDENT 7.0
.INDENT 3.5
Comma separated list of names to use on the
legend for the generated comparison graphs,
specified in the same order as the
\fB\-\-controllers\-list\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: the raw controller names will be used.
.UNINDENT
.UNINDENT
.TP
.B\-\-scenarios\-list
.INDENT 7.0
.INDENT 3.5
Comma separated list of scenarios to compare
\fB\-\-controller\fP across within
\fB\-\-sierra\-root\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-scenarios\-legend
.INDENT 7.0
.INDENT 3.5
Comma separated list of names to use on the
legend for the generated inter\-scenario
controller comparison graphs(if applicable),
specified in the same order as the
\fB\-\-scenarios\-list\fP\&.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: the raw scenario names will be used.
.UNINDENT
.UNINDENT
.TP
.B\-\-scenario\-comparison
.INDENT 7.0
.INDENT 3.5
Perform a comparison of \fB\-\-controller\fP across
\fB\-\-scenarios\-list\fP (univariate batch criteria
only).
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.INDENT 0.0
.TP
.B Used by stage{5}; can be omitted otherwise. Either \fB\-\-scenario\-comparison\fP or \fB\-\-controller\-comparison\fP must be
passed.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-controller\-comparison
.INDENT 7.0
.INDENT 3.5
Perform a comparison of \fB\-\-controllers\-list\fP
across all scenarios at least one controller
has been run on.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. Either \fB\-\-scenario\-comparison\fP or \fB\-\-controller\-comparison\fP must be passed.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-comparison\-type
Possible choices: LNraw, HMraw, HMdiff, HMscale, SUraw, SUscale, SUdiff
.INDENT 7.0
.INDENT 3.5
Specify how controller comparisons should be
performed.
.sp
If the batch criteria is univariate, the
options are:
.INDENT 0.0
.IP \(bu 2
\fBLNraw\fP \- Output raw 1D performance
measures using a single: class:
\fI~sierra.core.graphs.summary_line_graph.SummaryLineGraph\fP
for each measure, with all \fB\-
\-controllers\-list\fP controllers shown on the
same graph.
.UNINDENT
.sp
If the batch criteria is bivariate, the options
are:
.INDENT 0.0
.IP \(bu 2
\fBLNraw\fP \- Output raw performance measures
as a set of: class:
\fI~sierra.core.graphs.summary_line_graph.SummaryLineGraph\fP,
where each line graph is constructed from the
i\-th row/column for the 2D dataframe for the
performance results for all controllers.
.IP \(bu 2
\fBHMraw\fP \- Output raw 2D performance
measures as a set of dual heatmaps comparing
all controllers against the controller of
primary interest(one per pair).
.IP \(bu 2
\fBHMdiff\fP \- Subtract the performance measure
of the controller of primary interest against
all other controllers, pairwise, outputting
one 2D heatmap per comparison.
.IP \(bu 2
\fBHMscale\fP \- Scale controller performance
measures against those of the controller of
primary interest by dividing, outputing one
2D heatmap per comparison.
.IP \(bu 2
\fBSUraw\fP \- Output raw 3D performance
measures as a single, stacked 3D surface
plots comparing all controllers(identical
plots, but viewed from different angles).
.IP \(bu 2
\fBSUscale\fP \- Scale controller performance
measures against those of the controller of
primary interest by dividing. This results in
a single stacked 3D surface plots comparing
all controllers(identical plots, but viewed
from different angles).
.IP \(bu 2
\fBSUdiff\fP \- Subtract the performance measure
of the controller of primary interest from
each controller(including the primary). This
results in a set single stacked 3D surface
plots comparing all controllers(identical
plots, but viewed from different angles), in
which the controller of primary interest
forms an(X, Y) plane at Z=0.
.UNINDENT
.sp
For all comparison types,
\fB\-\-controllers\-legend\fP is used if passed for
legend.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-bc\-univar
.INDENT 7.0
.INDENT 3.5
Specify that the batch criteria is
univariate. This cannot be deduced from the
command line \fB\-\-batch\-criteria\fP argument in
all cases because we are comparing controllers
\fIacross\fP scenarios, and each
scenario(potentially) has a different batch
criteria definition, which will result in
(potentially) erroneous comparisons if we don\(aqt
re\-generate the batch criteria for each scenaro
we compare controllers within.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-bc\-bivar
.INDENT 7.0
.INDENT 3.5
Specify that the batch criteria is
bivariate. This cannot be deduced from the
command line \fB\-\-batch\-criteria\fP argument in
all cases because we are comparing controllers
\fIacross\fP scenarios, and each
scenario(potentially) has a different batch
criteria definition, which will result in
(potentially) erroneous comparisons if we don\(aqt
re\-generate the batch criteria for each scenaro
we compare controllers in .
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-transpose\-graphs
.INDENT 7.0
.INDENT 3.5
Transpose the X, Y axes in generated
graphs. Useful as a general way to tweak graphs
for best use of space within a paper.
.sp
Ignored for other graph types.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Applicable graphs"
.INDENT 0.0
.IP \(bu 2
\fBHeatmap\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{5}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS ARGoS Platform
.sp
These options are enabled if \fB\-\-platform=platform.argos\fP is passed.
.SS Stage1: Generating Experiments
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-h] [\-\-exp\-setup EXP_SETUP] [\-\-physics\-engine\-type2D {dynamics2d}] [\-\-physics\-engine\-type3D {dynamics3d}] [\-\-physics\-n\-engines {1,2,4,6,8,12,16,24}]
              [\-\-physics\-iter\-per\-tick PHYSICS_ITER_PER_TICK] [\-\-camera\-config {overhead,argos.sw,argos.sw+interp,sierra.sw,sierra.sw+interp,sierra.sw+interp+zoom}] [\-\-with\-robot\-rab]
              [\-\-with\-robot\-leds] [\-\-with\-robot\-battery] [\-\-n\-robots N_ROBOTS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Stage1: Experiment setup
.INDENT 0.0
.TP
.B\-\-exp\-setup
.INDENT 7.0
.INDENT 3.5
Defines experiment run length, Ticks per second for the experiment
(<experiment> tag), # of datapoints to
capture/capture interval for each
simulation. See ln\-vars\-expsetup
for a full description.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "exp_setup.T5000.K5.N50"
.UNINDENT
.SS Stage1: Configuring ARGoS physics engines
.INDENT 0.0
.TP
.B\-\-physics\-engine\-type2D
Possible choices: dynamics2d
.INDENT 7.0
.INDENT 3.5
The type of 2D physics engine to use for managing
spatial extents within the arena, choosing one of
the types that ARGoS supports. The precise 2D areas
(if any) within the arena which will be controlled
by 2D physics engines is defined on a per
\fB\-\-project\fP basis.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "dynamics2d"
.TP
.B\-\-physics\-engine\-type3D
Possible choices: dynamics3d
.INDENT 7.0
.INDENT 3.5
The type of 3D physics engine to use for managing
3D volumetric extents within the arena, choosing
one of the types that ARGoS supports. The precise
3D volumes (if any) within the arena which will be
controlled by 3D physics engines is defined on a
per \fB\-\-project\fP basis.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "dynamics3d"
.TP
.B\-\-physics\-n\-engines
Possible choices: 1, 2, 4, 6, 8, 12, 16, 24
.INDENT 7.0
.INDENT 3.5
# of physics engines to use during simulation (yay
ARGoS!). If N > 1, the engines will be tiled in a
uniform grid within the arena (X and Y spacing may
not be the same depending on dimensions and how
many engines are chosen, however), extending upward
in Z to the height specified by \fB\-\-scenario\fP
(i.e., forming a set of "silos" rather that equal
volumetric extents).
.sp
If 2D and 3D physics engines are mixed, then half
of the specified # of engines will be allocated
among all arena extents cumulatively managed by
each type of engine. For example, if 4 engines are
used, with 1/3 of the arena managed by 2D engines
and 2/3 by 3D, then 2 2D engines will manage 1/3 of
the arena, and 2 3D engines will manage the other
2/3 of the arena.
.sp
If \fB\-\-exec\-env\fP is something other than
\fBhpc.local\fP then the # physics engines will be
computed from the HPC environment, and the cmdline
value (if any) will be ignored.
.sp
\fBIMPORTANT:\fP
.INDENT 0.0
.INDENT 3.5
When using multiple physics engines,
always make sure that \fB# engines / arena
dimension\fP (X \fBAND\fP Y dimensions) is always a
rational number. That is,
.INDENT 0.0
.IP \(bu 2
24 engines in a \fB12x12\fP arena will be fine,
because \fB12/24=0.5\fP, which can be
represented reasonably well in floating point.
.IP \(bu 2
24 engines in a \fB16x16\fP arena will not be
fine, because \fB16/24=0.666667\fP, which will
very likely result in rounding errors and
ARGoS being unable to initialize the space
because it can\(aqt place arena walls.
.UNINDENT
.sp
This is enforced by SIERRA.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-physics\-iter\-per\-tick
.INDENT 7.0
.INDENT 3.5
The # of iterations all physics engines should
perform per Tick each time the controller
loops are run (the # of ticks per second for
controller control loops is set via
\fB\-\-exp\-setup\fP).
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: 10
.UNINDENT
.SS Stage1: Rendering (see also stage4 rendering options)
.INDENT 0.0
.TP
.B\-\-camera\-config
Possible choices: overhead, argos.sw, argos.sw+interp, sierra.sw, sierra.sw+interp, sierra.sw+interp+zoom
.INDENT 7.0
.INDENT 3.5
Select the camera configuration for
simulation. Ignored unless \fB\-\-platform\-vc\fP is
passed. Valid values are:
.INDENT 0.0
.IP \(bu 2
\fBoverhead\fP \- Use a single overhead camera at
the center of the aren looking straight down at
an appropriate height to see the whole arena.
.IP \(bu 2
\fBargos.sw\fP \- Use the default ARGoS camera
configuration (12 cameras equally spaced on the
unit circle), cycling through
them periodically throughout simulation without
interpolation. In this configuration, cameras
are set at Z=arena height, so you need to make
sure your arena Z size is sufficiently high to
avoid only looking at the wall (even for 2D
simulations).
.IP \(bu 2
\fBargos.sw+interp\fP \- Same as \fBargos.sw\fP,
but with interpolation.
.IP \(bu 2
\fBsierra.sw\fP \- Use the SIERRA ARGoS
camera configuration (12 cameras), cycling
through them periodically throughout simulation
without interpolation.
.IP \(bu 2
\fBsierra.sw+interp\fP \- Same as \fBsierra.static\fP,
but with interpolation.
.IP \(bu 2
\fBsierra.sw+interp+zoom\fP \- Same as
\fBsierra.sw+interp\fP, but uses 36 cameras: 12
at 3 different levels of zoom, forming a spiral
of vantage points. All cameras are cycled
through periodically throughout simulation with
interpolation between positions.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "overhead"
.UNINDENT
.SS Stage1: Configuring robots
.INDENT 0.0
.TP
.B\-\-with\-robot\-rab
.INDENT 7.0
.INDENT 3.5
If passed, do not remove the Range and Bearing (RAB)
sensor, actuator, and medium XML definitions from
\fB\-\-template\-input\-file\fP before generating
experimental inputs. Otherwise, the following XML
tags are removed if they exist:
.INDENT 0.0
.IP \(bu 2
\fB\&.//media/range_and_bearing\fP
.IP \(bu 2
\fB\&.//actuators/range_and_bearing\fP
.IP \(bu 2
\fB\&.//sensors/range_and_bearing\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-with\-robot\-leds
.INDENT 7.0
.INDENT 3.5
If passed, do not remove the robot LED actuator XML
definitions from the \fB\-\-template\-input\-file\fP
before generating experimental inputs. Otherwise,
the following XML tags are removed if they exist:
.INDENT 0.0
.IP \(bu 2
\fB\&.//actuators/leds\fP
.IP \(bu 2
\fB\&.//medium/leds\fP
.IP \(bu 2
\fB\&.//sensors/colored_blob_omnidirectional_camera\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-with\-robot\-battery
.INDENT 7.0
.INDENT 3.5
If passed, do not remove the robot battery sensor
XML definitions from \fB\-\-template\-input\-file\fP
before generating experimental inputs. Otherwise,
the following XML tags are removed if they exist:
.INDENT 0.0
.IP \(bu 2
\fI\&.//entity/*/battery\fP
.IP \(bu 2
\fI\&.//sensors/battery\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-n\-robots
.INDENT 7.0
.INDENT 3.5
The # robots that should be used in the
simulation. Can be used to override batch criteria,
or to supplement experiments that do not set it so
that manual modification of input file is
unneccesary.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Stage2: Running Experiments
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-h] [\-\-exec\-jobs\-per\-node EXEC_JOBS_PER_NODE] [\-\-exec\-no\-devnull] [\-\-exec\-resume]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS HPC options
.sp
For platforms which are simulators (and cantherefore be run in HPC environments).
.INDENT 0.0
.TP
.B\-\-exec\-jobs\-per\-node
.INDENT 7.0
.INDENT 3.5
Specify the maximum number of parallel jobs to run per
allocated node. By default this is computed from the
selected HPC environment for maximum throughput given
the desired \fB\-\-n\-runs\fP and CPUs per allocated
node. However, for some environments being able to
override the computed default can be useful.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-exec\-no\-devnull
.INDENT 7.0
.INDENT 3.5
Don\(aqt redirect ALL output from simulations to
/dev/null. Useful for platform where you can\(aqt disable
all INFO messages at compile time, and don\(aqt want to
have to grep through lots of redundant stdout files to
see if there were any errors.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-exec\-resume
.INDENT 7.0
.INDENT 3.5
Resume a batch experiment that was killed/stopped/etc
last time SIERRA was run. This maps directly to GNU
parallel\(aqs \fB\-\-resume\-failed\fP option.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS ROS+Gazebo Platform
.sp
These options are enabled if \fB\-\-platform=platform.rosgazebo\fP is passed.
.SS Stage1: Generating Experiments
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-h] [\-\-exp\-setup EXP_SETUP] [\-\-robot ROBOT] [\-\-robot\-positions ROBOT_POSITIONS [ROBOT_POSITIONS ...]] [\-\-physics\-engine\-type {ode,bullet,dart,simbody}]
              [\-\-physics\-iter\-per\-tick PHYSICS_ITER_PER_TICK] [\-\-physics\-n\-threads PHYSICS_N_THREADS] [\-\-physics\-ec\-threadpool PHYSICS_EC_THREADPOOL]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Stage1: Experiment setup
.INDENT 0.0
.TP
.B\-\-exp\-setup
.INDENT 7.0
.INDENT 3.5
Defines experiment run length, ticks per second
for the experiment, # of datapoints to
capture/capture interval for each
simulation. See ln\-vars\-expsetup for a
full description.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "exp_setup.T1000.K5.N50"
.TP
.B\-\-robot
.INDENT 7.0
.INDENT 3.5
The key name of the robot model, which must be
present in the appropriate section of
\fBmain.yaml\fP for the Project\&. See
ln\-tutorials\-project\-main\-config for
details.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Stage1: Experiment setup
.INDENT 0.0
.TP
.B\-\-robot\-positions
.INDENT 7.0
.INDENT 3.5
A list of space\-separated "X,Y,Z" tuples (no
quotes) passed on the command line as valid
starting positions for the robots within the
world.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.INDENT 0.0
.TP
.B Used by stage{1}; can be omitted otherwise. If omitted:
effective arena
dimensions must be
given as part of the
\fB\-\-scenario\fP
parameter.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Default: []
.UNINDENT
.SS Stage1: Configuring Gazebo physics engines
.INDENT 0.0
.TP
.B\-\-physics\-engine\-type
Possible choices: ode, bullet, dart, simbody
.INDENT 7.0
.INDENT 3.5
The type of 3D physics engine to use for managing
spatial extents within the arena, choosing one of
the types that Gazebo supports. A single
engine instance is used to manage all physics in
the arena.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "ode"
.TP
.B\-\-physics\-iter\-per\-tick
.INDENT 7.0
.INDENT 3.5
The # of iterations all physics engines should
perform per tick each time the controller loops are
run (the # of ticks per second for controller
control loops is set via \fB\-\-exp\-setup\fP).
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: 1000
.TP
.B\-\-physics\-n\-threads
.INDENT 7.0
.INDENT 3.5
Gazebo can group non\-interacting entities into
computational "islands" and do the physics updates
for those islands in parallel each timestep
(islands) are recomputed after each
timestep). Gazebo can also parallelize the
computation of velocity/position updates with the
computation of resolving collisions (i.e., the
timestep impulse results in one entity "inside"
another). You can assign multiple threads to a pool
for cumulative use for these two parallelization
methods (threads will be allocated evenly between
them). The point at which adding more threads will
start to DECREASE performance depends on the
complexity of your world, the number and type of
robots in it, etc., so don\(aqt just set this
parameter to the # of cores for your machine as a
default.
.sp
From the Gazebo Parallel Physics Report, setting
the pool size to the # robots/# joint trees in your
simulation usually gives good results, as long as
you have more cores available than you allocate to
this pool (Gazebo has other threads too).
.sp
This only applies if 
.nf
\(ga\(ga
.fi
\-\-physics\-engine\-type\(ga\(ga=ode.
.sp
A value of 0=no threads.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: 0
.TP
.B\-\-physics\-ec\-threadpool
.INDENT 7.0
.INDENT 3.5
Gazebo can parallelize the computation of
velocity/position updates with the computation of
resolving collisions (i.e., the timestep impulse
results in one entity "inside" another). You
can assign multiple threads to a pool for
cumulative use for this purpose. The point at which
adding more threads will start to DECREASE
performance depends on the complexity of your
world, the number and type of robots in it, etc.,
so don\(aqt just set this parameter to the # of cores
for your machine as a default.
.sp
From the Gazebo Parallel Physics Report, setting
the pool size to the # robots/#joint trees in your
simulation usually gives good results, as long as
you have more cores than than you allocate to
physics (Gazebo has other threads too).
.sp
This only applies if 
.nf
\(ga\(ga
.fi
\-\-physics\-engine\-type\(ga\(ga=ode.
.sp
A value of 0=no threads.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: 0
.UNINDENT
.SS Stage2: Running Experiments
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-h] [\-\-exec\-jobs\-per\-node EXEC_JOBS_PER_NODE] [\-\-exec\-no\-devnull] [\-\-exec\-resume]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS HPC options
.sp
For platforms which are simulators (and cantherefore be run in HPC environments).
.INDENT 0.0
.TP
.B\-\-exec\-jobs\-per\-node
.INDENT 7.0
.INDENT 3.5
Specify the maximum number of parallel jobs to run per
allocated node. By default this is computed from the
selected HPC environment for maximum throughput given
the desired \fB\-\-n\-runs\fP and CPUs per allocated
node. However, for some environments being able to
override the computed default can be useful.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.TP
.B\-\-exec\-no\-devnull
.INDENT 7.0
.INDENT 3.5
Don\(aqt redirect ALL output from simulations to
/dev/null. Useful for platform where you can\(aqt disable
all INFO messages at compile time, and don\(aqt want to
have to grep through lots of redundant stdout files to
see if there were any errors.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1,2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.TP
.B\-\-exec\-resume
.INDENT 7.0
.INDENT 3.5
Resume a batch experiment that was killed/stopped/etc
last time SIERRA was run. This maps directly to GNU
parallel\(aqs \fB\-\-resume\-failed\fP option.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: False
.UNINDENT
.SS ROS+Robot Platform
.sp
These options are enabled if \fB\-\-platform=platform.rosrobot\fP is passed.
.SS Stage1: Generating Experiments
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-h] [\-\-exp\-setup EXP_SETUP] [\-\-robot ROBOT]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Stage1: Experiment setup
.INDENT 0.0
.TP
.B\-\-exp\-setup
.INDENT 7.0
.INDENT 3.5
Defines experiment run length, ticks per second
for the experiment, # of datapoints to
capture/capture interval for each
simulation. See ln\-vars\-expsetup for a
full description.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: "exp_setup.T1000.K5.N50"
.TP
.B\-\-robot
.INDENT 7.0
.INDENT 3.5
The key name of the robot model, which must be
present in the appropriate section of
\fBmain.yaml\fP for the Project\&. See
ln\-tutorials\-project\-main\-config for
details.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{1}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Stage2: Running Experiments
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: SIERRA [\-h] [\-\-exec\-inter\-run\-pause SECONDS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Experiment options
.sp
For real robot experiments
.INDENT 0.0
.TP
.B\-\-exec\-inter\-run\-pause
.INDENT 7.0
.INDENT 3.5
How long to pause between Experimental Runs, giving you time to reset the
environment, move robots, etc.
.UNINDENT
.UNINDENT
.INDENT 7.0
.INDENT 3.5
.IP "Stage usage"
.sp
Used by stage{2}; can be omitted otherwise. If omitted: N/A.
.UNINDENT
.UNINDENT
.sp
Default: 60
.UNINDENT
.INDENT 0.0
.TP
.B SIERRA_PLUGIN_PATH
Used for locating plugins\&. The directory \fIcontaining\fP a
plugin directory outside the SIERRA source tree must be on
\fBSIERRA_PLUGIN_PATH\fP\&. Paths are added to \fBPYTHONPATH\fP as needed to load
plugins correctly. For example, if you have a different version of the
\fB\-\-storage\-medium\fP plugin you\(aqd like to use, and you have but the directory
containing the plugin in \fB/home/user/plugins\fP, then you need to add
\fB/home/user/plugins\fP to your \fBSIERRA_PLUGIN_PATH\fP to so that SIERRA will
find it. This variable is used in stages 1\-5.
.sp
Used for locating projects; all projects specifiable with
\fB\-\-project\fP are directories found within the directories on this path. For
example, if you have a project \fB/home/$USER/git/projects/myproject\fP, then
\fB/home/$USER/git\fP must be on \fBSIERRA_PLUGIN_PATH\fP in order for you to be
able to specify \fB\-\-project=myproject\fP\&. This variable is used in stages 1\-5.
.sp
You \fIcannot\fP just put the parent directory of your project on
\fI\%PYTHONPATH\fP because SIERRA uses this path for other things
internally (e.g., computing the paths to YAML config files).
.UNINDENT
.INDENT 0.0
.TP
.B PYTHONPATH
Used for locating projects per the usual python mechanisms.
.UNINDENT
.INDENT 0.0
.TP
.B ARGOS_PLUGIN_PATH
Must be set to contain the library directory where you installed/built ARGoS,
as well as the library directory for your project \fB\&.so\fP\&. Checked to be
non\-empty before running stage 2 for all \fB\-\-exec\-env\fP plugins. SIERRA does
\fInot\fP modify this variable, so it needs to be setup properly prior to
invoking SIERRA (i.e., the directory containing the Project \fB\&.so\fP
file needs to be on it). SIERRA can\(aqt know, in general, where the location of
the C++ code corresponding to the loaded Project is.
.UNINDENT
.INDENT 0.0
.TP
.B SIERRA_ARCH
Used to determine the names of ARGoS executables via \fBargos3\-$SIERRA_ARCH\fP,
so that in HPC environments with multiple queues/sub\-clusters with different
architectures ARGoS can be compiled natively for each for maximum
performance.  Can be any string. Used when generating ARGoS cmds in stage 1,
and only if SIERRA is run on a cluster.
.UNINDENT
.INDENT 0.0
.TP
.B SIERRA_NODEFILE
Points to a file suitable for passing to \fBparallel\fP via
\fB\-\-sshloginfile\fP\&. See \fBparallel\fP docs for content/formatting
requirements.
.sp
Used by SIERRA to configure experiments during stage 1,2; if it is not
defined and \fB\-\-nodefile\fP is not passed SIERRA will throw an error.
.UNINDENT
.INDENT 0.0
.TP
.B PARALLEL
Any and all environment variables needed by your Project must be
exported via the \fBPARALLEL\fP environment variable before invoking SIERRA,
because GNU parallel does not export the environment of the node it is
launched from to slave nodes (or even on the local machine). Something like:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
export PARALLEL="\-\-workdir . \-\-env PATH \-\-env LD_LIBRARY_PATH \-\-env
LOADEDMODULES \-\-env _LMFILES_ \-\-env MODULE_VERSION \-\-env MODULEPATH \-\-env
MODULEVERSION_STACK \-\-env MODULESHOME \-\-env OMP_DYNAMICS \-\-env
OMP_MAX_ACTIVE_LEVELS \-\-env OMP_NESTED \-\-env OMP_NUM_THREADS \-\-env
OMP_SCHEDULE \-\-env OMP_STACKSIZE \-\-env OMP_THREAD_LIMIT \-\-env OMP_WAIT_POLICY
\-\-env SIERRA_ARCH \-\-env SIERRA_PLUGIN_PATH"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Should be a good starting point. Only used if SIERRA is run on a cluster with
\fBexec_env=hpc.slurm|hpc.pbs\fP\&. Don\(aqt forget to include
\fI\%ARGOS_PLUGIN_PATH\fP, \fI\%ROS_PACKAGE_PATH\fP, etc., depending on
your chosen Platform\&.
.UNINDENT
.INDENT 0.0
.TP
.B ROS_PACKAGE_PATH
The list of directories which defines where ROS will search for
packages. SIERRA does \fInot\fP modify this variable, so it needs to be setup
properly prior to invoking SIERRA (i.e., sourcing the proper \fBsetup.bash\fP
script).
.UNINDENT
.sp
Generally speaking, SIERRA is very conservative, and uses lots of assert()s to
verify its internal state and the state of a given experiment at a given step of
execution before proceeding to the next step. SIERRA should rarely crash with a
cryptic interpreter error message/exception, but if it does, please report it so
I can fix it and/or create a better error message.
.sp
Should be reported to \fI\%https://github.com:swarm\-robotics/sierra.git\fP\&.
.INDENT 0.0
.IP \(bu 2
\fBsierra\-cli\fP
.IP \(bu 2
\fBsierra\-vc\fP
.UNINDENT
.SH AUTHOR
John Harwell
.SH COPYRIGHT
2021, John Harwell
.\" Generated by docutils manpage writer.
.
