[tool.poetry]
name = "netgate-xml-to-xlsx"
version = "0.9.2a2-1"
description = "Translate Netgate firewall rules to spreadsheet for review."
authors = ["Raymond GA Côté <ray@AppropriateSolutions.com>"]
keywords = ["firewall", "netgate"]
readme = "README.md"
license = "BSD-3-Clause"
homepage = "https://gitlab.com/appropriate-solutions-inc/netgate-xml-to-xlsx"
repository = "https://gitlab.com/appropriate-solutions-inc/netgate-xml-to-xlsx.git"
include = [
    "LICENSE",
    "CHANGELOG.md"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Topic :: System :: Networking :: Firewalls",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.10"
xmltodict = "^0.12.0"
openpyxl = "^3.0.9"


[tool.poetry.dev-dependencies]
pytest = "^7"
black = "^22"
pylint = "^2"
flakeheaven = "^0.11.1"
flake8-aaa = "^0.12.2"
flake8-2020 = "*"
flake8-bandit = "*"
flake8-broken-line = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-docstrings = "*"
flake8-eradicate = "*"
flake8-executable = "*"
flake8-expression-complexity = "*"
flake8-functions = "*"  #  "mr_proper==0.0.4",  # support py36
flake8-logging-format = "*"
flake8-mutable = "*"
flake8-mypy = "*"
flake8-printf-formatting = "*"
flake8-pylint = "^0.1.3"
flake8-pytest-style = "*"
flake8-pytest = "*"
pre-commit = "^2.17.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
netgate-xml-to-xlsx = "netgate_xml_to_xlsx.main:main"

[tool.black]
target-version = ["py310",]

[tool.flakeheaven]
# See canonical example: https://raw.githubusercontent.com/flakeheaven/flakeheaven/master/pyproject.toml
exclude = [".git", "dist","tests"]
max_line_length = 99
format = "grouped"
# show_source = true

[tool.flakeheaven.plugins]
pycodestyle = ["+*"]
pyflakes = ["+*"]
flake8-aaa = ["+*", "+**/test_*"]
flake8-bandit = ["+*", "-**/test_*.py", "-S101"]
# flake8-black unnecessary as black runs as a pre-commit
#flake8-black = ["+*"]
flake8-broken-line = ["+*"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
# Class IS complex
#flake8-cognitive-complexity = ["+*"]
flake8-comprehensions = ["+*"]
flake8-docstrings = ["+*"]
flake8-eradicate = ["+*"]
flake8-executable = ["+*"]
flake8-expression-complexity = ["+*"]
# flake8-fixme = ["+*"]
flake8-functions = ["+*", "-CFQ004"]
flake8-logging-format = ["+*"]
flake8-mutable = ["+*"]
flake8-mypy = ["+*"]
flake8-printf-formatting = ["+*"]
flake8-pylint-plugin = ["+*","-PLR0201"]
# Add back the test
flake8-pytest = ["+*", "+**/test_*"]
flake8-pytest-style = ["+*", "+**/test_*"]

[tool.flake8-functions]
