- name: Install Nova controller
  hosts: controller
  become: yes
  roles:
    - role: init_database
      vars:
        database: nova
        user: nova
    - role: init_database
      vars:
        database: nova_api
        user: nova
    - role: init_database
      vars:
        database: nova_cell0
        user: nova
    - role: create_identity_user
      vars:
        user: nova
    - role: create_identity_service
      vars:
        service: nova
        type: compute
        description: "OpenStack Compute"
        endpoint: http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:8774/v2.1
  tasks:
    - name: Install nova package
      yum:
        name:
          - openstack-nova-api
          - openstack-nova-conductor
          - openstack-nova-novncproxy
          - openstack-nova-scheduler

- name: Install Nova compute
  hosts: compute
  become: yes
  tasks:
    - name: Install nova-compute package
      yum:
        name:
          - openstack-nova-compute
          - dmidecode

    - name: Check node architecture
      shell: |
        if [[ `uname -m` == 'aarch64' ]];then
          yum install -y edk2-aarch64
        fi

- name: Init config file
  hosts: all
  become: yes
  tasks:
    - name: Initialize config file
      shell: |
        cat << EOF > /etc/nova/nova.conf
        [DEFAULT]
        enabled_apis = osapi_compute,metadata
        transport_url = rabbit://openstack:{{ rabbitmq_password }}@{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5672/
        my_ip = {{ ansible_default_ipv4['address'] }}
        use_neutron = true
        firewall_driver = nova.virt.firewall.NoopFirewallDriver
        compute_driver=libvirt.LibvirtDriver
        instances_path = /var/lib/nova/instances/
        lock_path = /var/lib/nova/tmp

        [api_database]
        connection = mysql+pymysql://nova:{{ mysql_project_password }}@{{ hostvars['controller']['ansible_default_ipv4']['address'] }}/nova_api

        [database]
        connection = mysql+pymysql://nova:{{ mysql_project_password }}@{{ hostvars['controller']['ansible_default_ipv4']['address'] }}/nova

        [api]
        auth_strategy = keystone

        [keystone_authtoken]
        www_authenticate_uri = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000/
        auth_url = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000/
        memcached_servers = {{ hostvars['controller']['ansible_default_ipv4']['address'] }}:11211
        auth_type = password
        project_domain_name = Default
        user_domain_name = Default
        project_name = service
        username = nova
        password = {{ project_identity_password }}

        [vnc]
        enabled = true
        server_listen = {{ ansible_default_ipv4['address'] }}
        server_proxyclient_address = {{ ansible_default_ipv4['address'] }}
        novncproxy_base_url = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:6080/vnc_auto.html

        [glance]
        api_servers = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:9292

        [oslo_concurrency]
        lock_path = /var/lib/nova/tmp

        [placement]
        region_name = RegionOne
        project_domain_name = Default
        project_name = service
        auth_type = password
        user_domain_name = Default
        auth_url = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000/v3
        username = placement
        password = {{ project_identity_password }}

        [neutron]
        auth_url = http://{{ hostvars['controller']['ansible_default_ipv4']['address'] }}:5000
        auth_type = password
        project_domain_name = default
        user_domain_name = default
        region_name = RegionOne
        project_name = service
        username = neutron
        password = {{ project_identity_password }}
        service_metadata_proxy = true
        metadata_proxy_shared_secret = secret
        EOF

# TODO: add kvm support
- name: Update Nova compute
  hosts: compute
  become: yes
  tasks:
    - name: Update config file
      shell: |
        cat << EOF >> /etc/nova/nova.conf
        
        [libvirt]
        virt_type = qemu
        EOF
        if [[ `uname -m` == 'aarch64' ]];then
        cat << EOF >> /etc/nova/nova.conf
        cpu_mode = custom
        cpu_model = cortex-a72
        EOF

          mkdir -p /usr/share/AAVMF
          chown nova:nova /usr/share/AAVMF

          ln -s /usr/share/edk2/aarch64/QEMU_EFI-pflash.raw /usr/share/AAVMF/AAVMF_CODE.fd
          ln -s /usr/share/edk2/aarch64/vars-template-pflash.raw /usr/share/AAVMF/AAVMF_VARS.fd

        cat << EOF >> /etc/libvirt/qemu.conf
        nvram = ["/usr/share/AAVMF/AAVMF_CODE.fd:/usr/share/AAVMF/AAVMF_VARS.fd",
                 "/usr/share/edk2/aarch64/QEMU_EFI-pflash.raw:/usr/share/edk2/aarch64/vars-template-pflash.raw"]
        EOF
        fi

- name: Complete Nova controller install
  hosts: controller
  become: yes
  tasks:
    - name: Sync database
      shell: |
        su -s /bin/sh -c "nova-manage api_db sync" nova
        su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
        su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
        su -s /bin/sh -c "nova-manage db sync" nova
        su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova

    - name: Start openstack-nova-api service
      systemd:
        name: openstack-nova-api
        state: started
        enabled: True

    - name: Start openstack-nova-scheduler service
      systemd:
        name: openstack-nova-scheduler
        state: started
        enabled: True

    - name: Start openstack-nova-conductor service
      systemd:
        name: openstack-nova-conductor
        state: started
        enabled: True

    - name: Start openstack-nova-novncproxy service
      systemd:
        name: openstack-nova-novncproxy
        state: started
        enabled: True

- name: Complete Nova compute install
  hosts: compute
  become: yes
  tasks:
    - name: Start libvirtd service
      systemd:
        name: libvirtd
        state: started
        enabled: True

    - name: Start openstack-nova-compute service
      systemd:
        name: openstack-nova-compute
        state: started
        enabled: True

- name: Discover compute node
  hosts: controller
  become: yes
  tasks:
    - name: Discover compute node
      shell: su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova 
