[tool.poetry]
name = "django-salesman"
version = "1.1.3"
description = "Headless e-commerce framework for Django and Wagtail."
authors = ["Dino Perovic <dino.perovic@gmail.com>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://pypi.org/project/django-salesman/"
repository = "https://github.com/dinoperovic/django-salesman"
documentation = "https://django-salesman.readthedocs.io"
keywords = ["e-commerce", "headless", "rest-api", "shop", "framework"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 2",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Internet",
]
packages = [
    {include = "salesman"},
]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
django = ">=3.1,<4.1"
djangorestframework = ">=3.11,<3.14"

# Optional dependencies
Pygments = {version = "^2.6", optional = true}
wagtail = {version = ">=2.9,<2.17", optional = true}
pytest = {version = "~7.0.0", optional = true}
pytest-django = {version = "~4.5.0", optional = true}
pytest-cov = {version = "~3.0.0", optional = true}
sphinx = {version = "~4.4.0", optional = true}
sphinx-rtd-theme = {version = "~1.0.0", optional = true}
sphinx-autobuild = {version = "~2021.3.0", optional = true}
sphinxcontrib-httpdomain = {version = "~1.8.0", optional = true}

[tool.poetry.dev-dependencies]
isort = "~5.10.1"
black = "~22.1.0"
flake8 = "~3.9.0"
mypy = "~0.931"

[tool.poetry.extras]
pygments = ["Pygments"]
example = ["Pygments", "wagtail"]
tests = ["Pygments", "wagtail", "pytest", "pytest-django", "pytest-cov"]
docs = ["wagtail", "sphinx", "sphinx-rtd-theme", "sphinx-autobuild", "sphinxcontrib-httpdomain"]

[tool.black]
skip-string-normalization = true
exclude = '/(\.git|\.venv|dist|migrations)/'

[tool.isort]
profile = "black"
skip = ".git,.venv,dist,migrations"
known_first_party = ["salesman", "shop"]
known_third_party = ["rest_framework", "wagtail", "pytest"]

[tool.mypy]
ignore_missing_imports = true
exclude = ".git|.venv|dist|migrations"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
