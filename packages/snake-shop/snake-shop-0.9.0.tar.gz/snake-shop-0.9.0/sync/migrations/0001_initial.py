# Generated by Django 3.2.10 on 2022-01-17 21:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalogue', '0053_avoid_leading_zeros_in_upc'),
        ('oscarapi', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Erstelldatum')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Änderungsdatum')),
                ('price_incl', models.DecimalField(blank=True, decimal_places=4, help_text='Standardpreis, wird nicht synchronisiert wenn leer', max_digits=14, null=True, verbose_name='Bruttopreis')),
                ('editable', models.BooleanField(default=False, help_text='Produkteditierung wird ohne Bestätigung durch Administrator veröffentlicht.', verbose_name='Editierbar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.product', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Produktabo',
                'verbose_name_plural': 'Produktabos',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Erstelldatum')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Änderungsdatum')),
                ('domain', models.CharField(help_text='Domain ohne Schema und Pfad (z.B. master-shop.de)', max_length=100, verbose_name='Domain')),
                ('schema', models.CharField(choices=[('https', 'Https'), ('http', 'Http (Nur für Dev verwenden!)')], default='https', max_length=10, verbose_name='Schema')),
                ('sync_delete', models.BooleanField(default=False, help_text='Löschen von Objekten während Synchronisierung erlauben', verbose_name='Löschen bei Sync')),
                ('key', models.OneToOneField(help_text='Der API Schlüssel muss mit dem im slave übereinstimmen', on_delete=django.db.models.deletion.CASCADE, related_name='shop', to='oscarapi.apikey')),
                ('products', models.ManyToManyField(related_name='shops', through='sync.ProductSubscription', to='catalogue.Product', verbose_name='Abonnierte Produkte')),
            ],
            options={
                'verbose_name': 'Shop',
                'verbose_name_plural': 'Shops',
            },
        ),
        migrations.CreateModel(
            name='ShopUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Erstelldatum')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Änderungsdatum')),
                ('role', models.CharField(choices=[('operator', 'Shop Betreiber')], default='operator', max_length=10, verbose_name='Rolle')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sync.shop', verbose_name='Shop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer')),
            ],
            options={
                'verbose_name': 'Shopbenutzer',
                'verbose_name_plural': 'Shopbenutzer',
            },
        ),
        migrations.AddField(
            model_name='shop',
            name='users',
            field=models.ManyToManyField(related_name='shops', through='sync.ShopUser', to=settings.AUTH_USER_MODEL, verbose_name='Shopbenutzer'),
        ),
        migrations.AddField(
            model_name='productsubscription',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sync.shop', verbose_name='Shop'),
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Erstelldatum')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Änderungsdatum')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'abgebrochen'), (10, 'anstehend'), (20, 'veröffentlicht')], default=10, help_text='Status of this change', verbose_name='Status')),
                ('data', models.JSONField()),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Kommentar')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes_created', to=settings.AUTH_USER_MODEL, verbose_name='Ersteller')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='catalogue.product', verbose_name='Produkt')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='changes_updated', to=settings.AUTH_USER_MODEL, verbose_name='Veröffentlicher')),
            ],
            options={
                'verbose_name': 'Änderung',
                'verbose_name_plural': 'Änderungen',
            },
        ),
        migrations.AddConstraint(
            model_name='change',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('publisher__isnull', False), models.Q(('status', 20), _negated=True), _connector='OR')), name='published_with_publisher'),
        ),
    ]
