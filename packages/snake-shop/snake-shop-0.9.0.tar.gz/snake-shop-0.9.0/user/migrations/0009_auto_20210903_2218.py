# Generated by Django 3.2.5 on 2021-09-03 20:18

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import oscar.models.fields.autoslugfield


class Migration(migrations.Migration):

    dependencies = [
        ('communication', '0008_auto_20210903_2218'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('catalogue', '0052_auto_20210817_2135'),
        ('user', '0008_user_newsletter_accepted'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.CreateModel(
            name='OrganizationUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('code', oscar.models.fields.autoslugfield.AutoSlugField(blank=True, editable=False, max_length=128, populate_from='name', separator='_', unique=True, validators=[django.core.validators.RegexValidator(message="Code can only contain the uppercase letters (A-Z), digits, and underscores, and can't start with a digit.", regex='^[A-Z_][0-9A-Z_]*$')], verbose_name='Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('customers', models.ManyToManyField(blank=True, help_text='Kunden für die diese Organisationseinheit zuständig ist. Kommunikationsvorgänge an diese Kunden werden an die Empfänger dieser Organisationseinheit als Kopie gesendet.', related_name='managing_ous', to=settings.AUTH_USER_MODEL, verbose_name='Customers')),
                ('email_recipients', models.ManyToManyField(blank=True, help_text='Empfängt Nachrichten aus dem Zuständigkeitsbereich dieser Organisationseinheit.', to='communication.EmailRecipient', verbose_name='E-Mail recipients')),
                ('event_types', models.ManyToManyField(blank=True, help_text='Kommunikationsvorgänge dieses Typs werden an die Mitglieder und Empfänger dieser Organisationseinheit als Kopie gesendet.', related_name='managing_ous', to='communication.CommunicationEventType', verbose_name='Communication event types')),
                ('members', models.ManyToManyField(blank=True, help_text='Zuständiger Seitenbenutzer. Empfängt Nachrichten aus dem Zuständigkeitsbereich dieser Organisationseinheit.', related_name='ous', to=settings.AUTH_USER_MODEL, verbose_name='Members')),
                ('product_classes', models.ManyToManyField(blank=True, help_text='Produktklassen für die diese Organisationseinheit zuständig ist. Kommunikationsvorgänge, die Produkte dieses Typs enthalten, werden an die Empfänger dieser Organisationseinheit als Kopie gesendet.', related_name='managing_ous', to='catalogue.ProductClass', verbose_name='Product classes')),
            ],
            options={
                'verbose_name': 'Organization unit',
                'verbose_name_plural': 'Organization units',
                'ordering': ['name'],
            },
        ),
    ]
