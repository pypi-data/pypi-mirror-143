{#

Context
--------------------------------
enum (gladiator.prepare.enum.PreparedEnum): Enum to render

Globals
--------------------------------
options (gladiator.options.Options): Merged CLI and config file options
constants (gladiator.generate.constants.Constants): Constants for shared use
templates (gladiator.generate.templates.TemplateFiles): Template file paths

#}

{% if enum.original_name in constants.enum_underlying_type_overrides %}
	{% set ut = constants.enum_underlying_type_overrides[enum.original_name] %}
{% else %}
	{% set ut = "std::uint32_t" %}
{% endif %}

enum class {{ enum.name }} : {{ ut }} {
	{% for member in enum.values %}
		{{ member.name }} = {{ member.value }},
	{% endfor %}
};

{% if enum.is_bitmask %}
	{% include "_include/enable_bitmask_operators.hxx" %}
{% endif %}

