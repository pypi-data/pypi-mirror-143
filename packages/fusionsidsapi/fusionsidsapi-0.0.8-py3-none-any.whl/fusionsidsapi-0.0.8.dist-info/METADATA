Metadata-Version: 2.1
Name: fusionsidsapi
Version: 0.0.8
Summary: An asynchronous api wrapper for FusionSidsAPI.
Home-page: https://github.com/FusionSid/FusionSidAPI.py
Author: Siddhesh Zantye
Author-email: siddheshadsv@icloud.com
License: UNKNOWN
Platform: UNKNOWN
Description-Content-Type: text/markdown
License-File: LICENCE
Requires-Dist: aiohttp (==3.8.1)
Requires-Dist: aiofiles (==0.6.0)

[![CodeFactor](https://img.shields.io/codefactor/grade/github/FusionSid/FusionSidAPI.py?style=for-the-badge)](https://www.codefactor.io/repository/github/fusionsid/fusionsidapi.py)
[![Downloads](https://img.shields.io/pypi/dd/fusionsidsapi?style=for-the-badge)](https://pypi.org/project/fusionsidsapi/)
[![PyPi-Version](https://img.shields.io/pypi/v/fusionsidsapi?style=for-the-badge)](https://pypi.org/project/fusionsidsapi/)


# FusionSidAPI Wrapper for python

An asynchronous api wrapper to use [FusionSidAPI](https://fusionsidapi.herokuapp.com/) in python.

---

# Install:

You can install this library from PyPi: [Link](https://pypi.org/project/fusionsidsapi/)

**Install with pip:**
```py
pip install fusionsidsapi
```

---

# Need Help

### Docs
This package now has [docs](https://fusionsid.github.io/FusionSidAPI.py/)

https://fusionsid.github.io/FusionSidAPI.py/  
or look in the Enviroments tab

### Help Function
Each class and function has a doc string so if you need help with anything in the pacakge just use the built in python function `help()`

eg:
```py
import fusionsid

# Example 1
help(fusionsid.RandomMeme)
help(fusionsid.GenerateMeme)

# Example 2
help(fusionsid.Image.qrcode)
help(fusionsid.Fun.truth_or_dare)

```

# Examples:

Look in the [examples](https://github.com/FusionSid/FusionSidAPI.py/tree/master/examples) folder for some examples

Example for getting a roast:
```py
import asyncio
from fusionsid import Fun

async def main():
    roast = await Fun.roast()
    print(roast)

loop = asyncio.new_event_loop()
loop.run_until_complete(main())
```

This package also has some decorators (also in the examples folder) so if you want a complement before your code is run heres how:
```py
import asyncio
from fusionsid import Decorators

do_compliment = Decorators.compliment

@do_compliment()
async def main():
    print("Wassup")

loop = asyncio.new_event_loop()
loop.run_until_complete(main())
```

---

### [FusionSidAPI Github](https://github.com/FusionSid/FusionSidsAPI)

---

## Contact:
Discord: `FusionSid#3645`

[My Github](https://github.com/FusionSid/)

## Changelog:
You can checkout the changes per version in [CHANGELOG.txt](https://github.com/FusionSid/FusionSidAPI.py/blob/master/CHANGELOG.txt)


If you find a bug please make an issue, I will try my best to fix it :)

Change Log
==========

0.0.8 (19/03/2022)
-------------------
- Made most funtions `@classmethod`'s so you don't have to init the class 
- Updated all doc strings to use `:param` so IDE's show it when typing
- Fixed `import *` to import the actual stuff

**Not code but the package now has [documentation](https://fusionsid.github.io/FusionSidAPI.py/)**

0.0.7 (10/03/2022)
-------------------
- Added 9 Text convert functions in `fusionsid.Text()` 
- Added `reddit_search`

0.0.6 (09/03/2022)
-------------------
- Wordle answers

0.0.5 (08/03/2022)
-------------------
- Fixed some bugs with the stats

0.0.4 (08/03/2022)
-------------------
- Added doc strings to every function/class

0.0.3 (08/03/2022)
-------------------
- Added Fact, `Truth`, `Dare` and `Truth+Dare` functions in the `Fun` Class

0.0.2 (06/03/2022)
-------------------
- Added `created_at` Attribute to `Meme`, `QRCode` and `RandomMeme` classes

0.0.1 (06/03/2022)
-------------------
- First Release

