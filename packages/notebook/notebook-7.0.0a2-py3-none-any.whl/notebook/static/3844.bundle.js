"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[3844,9853],{23844:(e,t,o)=>{o.r(t),o.d(t,{default:()=>w});var n=o(23982),a=o(25174),s=o(57003),l=o(26944),r=o(65058),c=o(36779),d=o(34615),i=o(45339),u=o(6814),k=o(28877);const p="jp-NotebookKernelStatus-error",m="jp-NotebookKernelStatus-warn",g="jp-NotebookKernelStatus-info",h="jp-NotebookKernelStatus-fade",b={id:"@jupyter-notebook/notebook-extension:checkpoints",autoStart:!0,requires:[s.IDocumentManager,d.ITranslator],optional:[i.INotebookShell],activate:(e,t,o,s)=>{const{shell:l}=e,r=o.load("notebook"),c=new k.Widget;c.id=n.DOMUtils.createDomID(),c.addClass("jp-NotebookCheckpoint"),e.shell.add(c,"top",{rank:100});const d=async()=>{const e=l.currentWidget;if(!e)return;const o=t.contextForWidget(e);null==o||o.fileChanged.disconnect(d),null==o||o.fileChanged.connect(d);const n=await(null==o?void 0:o.listCheckpoints());if(!n)return;const s=n[n.length-1];c.node.textContent=r.__("Last Checkpoint: %1",a.Time.formatHuman(new Date(s.last_modified)))};s&&s.currentChanged.connect(d),new u.Poll({auto:!0,factory:()=>d(),frequency:{interval:2e3,backoff:!1},standby:"when-hidden"})}},C={id:"@jupyter-notebook/notebook-extension:kernel-logo",autoStart:!0,requires:[i.INotebookShell],activate:(e,t)=>{const{serviceManager:o}=e;let n;const a=async()=>{var s,l,c,d,i;n&&(n.dispose(),n.parent=null);const u=t.currentWidget;if(!(u instanceof r.NotebookPanel))return;await u.sessionContext.ready,u.sessionContext.kernelChanged.disconnect(a),u.sessionContext.kernelChanged.connect(a);const p=null!==(c=null===(l=null===(s=u.sessionContext.session)||void 0===s?void 0:s.kernel)||void 0===l?void 0:l.name)&&void 0!==c?c:"",m=null===(i=null===(d=o.kernelspecs)||void 0===d?void 0:d.specs)||void 0===i?void 0:i.kernelspecs[p];if(!m)return;const g=m.resources["logo-64x64"];if(!g)return;const h=document.createElement("div"),b=document.createElement("img");b.src=g,b.title=m.display_name,h.appendChild(b),n=new k.Widget({node:h}),n.addClass("jp-NotebookKernelLogo"),e.shell.add(n,"top",{rank:10010})};e.started.then((()=>{t.currentChanged.connect(a)}))}},f={id:"@jupyter-notebook/notebook-extension:kernel-status",autoStart:!0,requires:[i.INotebookShell,d.ITranslator],activate:(e,t,o)=>{const n=o.load("notebook"),s=new k.Widget;s.addClass("jp-NotebookKernelStatus"),e.shell.add(s,"menu",{rank:10010});const l=e=>{const t=e.kernelDisplayStatus;let o=`Kernel ${a.Text.titleCase(t)}`;switch(s.removeClass(p),s.removeClass(m),s.removeClass(g),s.removeClass(h),t){case"busy":case"idle":o="",s.addClass(h);break;case"dead":case"terminating":s.addClass(p);break;case"unknown":s.addClass(m);break;default:s.addClass(g),s.addClass(h)}s.node.textContent=n.__(o)};t.currentChanged.connect((async()=>{const e=t.currentWidget;e instanceof r.NotebookPanel&&e.sessionContext.statusChanged.connect(l)}))}},v={id:"@jupyter-notebook/notebook-extension:menu-plugin",autoStart:!0,requires:[l.IMainMenu,d.ITranslator],activate:(e,t,o)=>{const{commands:n}=e,a=o.load("notebook"),s=new k.Menu({commands:n});s.title.label=a._p("menu","Cell Type"),["notebook:change-cell-to-code","notebook:change-cell-to-markdown","notebook:change-cell-to-raw"].forEach((e=>{s.addItem({command:e})})),t.runMenu.addItem({type:"separator",rank:1e3}),t.runMenu.addItem({type:"submenu",submenu:s,rank:1010})}},y={id:"@jupyter-notebook/notebook-extension:scroll-output",autoStart:!0,requires:[r.INotebookTracker],optional:[c.ISettingRegistry],activate:async(e,t,o)=>{let n=!0;const a=e=>{if(!n)return;const{outputArea:t}=e;if(void 0!==e.model.metadata.get("scrolled"))return;const{node:o}=t,a=o.scrollHeight>1.3*(parseFloat(o.style.fontSize.replace("px",""))||14)*100;e.toggleClass("jp-mod-outputsScrolled",a)};if(t.widgetAdded.connect(((e,t)=>{var o;null===(o=t.model)||void 0===o||o.cells.changed.connect(((e,o)=>{if("add"!==o.type)return;const[n]=o.newValues;t.content.widgets.forEach((e=>{if(e.model.id===n.id&&"code"===e.model.type){const t=e;t.outputArea.model.changed.connect((()=>a(t)))}}))})),t.sessionContext.ready.then((()=>{t.content.widgets.forEach((e=>{"code"===e.model.type&&a(e)}))}))})),o){const t=o.load(y.id),a=e=>{n=e.get("autoScrollOutputs").composite};Promise.all([t,e.restored]).then((([e])=>{a(e),e.changed.connect((e=>{a(e)}))})).catch((e=>{console.error(e.message)}))}}},w=[b,C,f,v,y]}}]);