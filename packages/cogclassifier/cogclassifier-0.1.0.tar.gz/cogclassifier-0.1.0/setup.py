# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['cogclassifier', 'cogclassifier.script']

package_data = \
{'': ['*']}

install_requires = \
['altair>=4.2.0,<5.0.0', 'pandas>=1.4.1,<2.0.0', 'requests>=2.27.1,<3.0.0']

entry_points = \
{'console_scripts': ['COGclassifier = cogclassifier.COGclassifier:main',
                     'plot_cog_classifier_barchart = '
                     'cogclassifier.script.plot_cog_classifier_barchart:main',
                     'plot_cog_classifier_piechart = '
                     'cogclassifier.script.plot_cog_classifier_piechart:main']}

setup_kwargs = {
    'name': 'cogclassifier',
    'version': '0.1.0',
    'description': 'Classify prokaryote protein sequences into COG functional category',
    'long_description': "# COGclassifier\n\n![Python3](https://img.shields.io/badge/Language-Python3-steelblue)\n![License](https://img.shields.io/badge/License-MIT-steelblue)\n[![Latest PyPI version](https://img.shields.io/pypi/v/cogclassifier.svg)](https://pypi.python.org/pypi/cogclassifier)  \n\n## Table of Contents\n\n- [Overview](#overview)\n- [Installation](#installation)\n- [Workflow](#workflow)\n- [Command Usage](#command-usage)\n- [Output Contents](#output-contents)\n- [Customize charts](#customize-charts)\n\n## Overview\n\nCOGclassifier is a tool for classifying prokaryote protein sequences into COG functional category.\n\n![ecoli_barchart_fig](https://raw.githubusercontent.com/moshi4/COGclassifier/main/images/ecoli/classifier_count_barchart.png)  \nFig.1: Barchart of COG funcitional category classification result for E.coli\n\n![ecoli_piechart_sort_fig](https://raw.githubusercontent.com/moshi4/COGclassifier/main/images/ecoli/classifier_count_piechart_sort.png)  \nFig.2: Piechart of COG funcitional category classification result for E.coli\n\n## Installation\n\nCOGclassifier is implemented in Python3 (Tested on Ubuntu20.04)\n\nInstall PyPI stable version with pip:\n\n    pip install cogclassifier\n\nCOGclassifier requires `RPS-BLAST` for COG database search.  \nDownload latest BLAST executable binary from [NCBI FTP site](https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/) and add to PATH.\n\n> :warning:\n> 'mt_mode' option has been added since v2.12.0 or newer versions of BLAST.\n> 'mt_mode=1' option setting makes effective use of multi-threading and is faster, so it is recommended that you install the latest version.\n> See NCBI's article [Threading By Query](https://www.ncbi.nlm.nih.gov/books/NBK571452/) for details.\n\n## Workflow\n\n1. Download COG & CDD resources\n\n2. RPS-BLAST query sequences against COG database\n\n3. Classify query sequences into COG functional category\n\n## Command Usage\n\n### Basic Command\n\n    COGclassifier -i [query protein fasta file] -o [output directory]\n\n### Options\n\n    -h, --help            show this help message and exit\n    -i , --infile         Input query protein fasta file\n    -o , --outdir         Output directory\n    -d , --download_dir   Download COG & CDD FTP data directory (Default: './cog_download')\n    -t , --thread_num     RPS-BLAST num_thread parameter (Default: MaxThread - 1)\n    -e , --evalue         RPS-BLAST e-value parameter (Default: 0.01)\n    -v, --version         Print version information\n\n### Example Command\n\nClassify E.coli protein sequences into COG functional category ([ecoli.faa](https://github.com/moshi4/COGclassifier/blob/main/example/input/ecoli.faa?raw=true)):  \n\n    COGclassifier -i ./example/input/ecoli.faa -o ./ecoli_cog_classifier\n\n## Output Contents\n\nCOGclassifier outputs 4 result text files and 3 html format chart files.  \n\n- **`rpsblast_result.tsv`** ([example](https://github.com/moshi4/COGclassifier/blob/main/example/output/mycoplasma_cog_classifier/rpsblast_result.tsv))  \n\n  RPS-BLAST against COG database result (format = `outfmt 6`).  \n\n- **`classifier_result.tsv`** ([example](https://github.com/moshi4/COGclassifier/blob/main/example/output/mycoplasma_cog_classifier/classifier_result.tsv))  \n\n  Query sequences classified into COG functional category result.  \n  This file contains all classified query sequences and associated COG information.  \n\n    <details>\n    <summary>Table of detailed tsv format information (9 columns)</summary>\n\n    | Columns          | Contents                               | Example Value                       |\n    | ---------------- | -------------------------------------- | ----------------------------------- |\n    | QUERY_ID         | Query ID                               | NP_414544.1                         |\n    | COG_ID           | COG ID of RPS-BLAST top hit result     | COG0083                             |\n    | CDD_ID           | CDD ID of RPS-BLAST top hit result     | 223161                              |\n    | EVALUE           | RPS-BLAST top hit evalue               | 2.5e-150                            |\n    | IDENTITY         | RPS-BLAST top hit identity             | 45.806                              |\n    | GENE_NAME        | Abbreviated gene name                  | ThrB                                |\n    | COG_NAME         | COG gene name                          | Homoserine kinase                   |\n    | COG_LETTER       | Letter of COG functional category      | E                                   |\n    | COG_DESCRIPTION  | Description of COG functional category | Amino acid transport and metabolism |\n\n    </details>\n\n- **`classifier_count.tsv`** ([example](https://github.com/moshi4/COGclassifier/blob/main/example/output/ecoli_cog_classifier/classifier_count.tsv))  \n  \n  Count classified sequences per COG functional category result.  \n\n    <details>\n    <summary>Table of detailed tsv format information (4 columns)</summary>\n\n    | Columns     | Contents                                | Example Value                                   |\n    | ------------| --------------------------------------- | ----------------------------------------------- |\n    | LETTER      | Letter of COG functional category       | J                                               |\n    | COUNT       | Count of COG classified sequence        | 259                                             |\n    | COLOR       | Symbol color of COG functional category | #FCCCFC                                         |\n    | DESCRIPTION | Description of COG functional category  | Translation, ribosomal structure and biogenesis |\n\n    </details>\n\n- **`classifier_stats.txt`** ([example](https://github.com/moshi4/COGclassifier/blob/main/example/output/ecoli_cog_classifier/classifier_stats.txt))  \n\n  The percentages of the classified sequences are described as example below.  \n  > 86.35% (3575 / 4140) sequences classified into COG functional category.\n\n- **`classifier_count_barchart.html`**  \n\n  Barchart of COG funcitional category classification result.  \n  COGclassifier uses `Altair` visualization library for plotting html format charts.  \n  In web browser, Altair charts interactively display tooltips and can export image as PNG or SVG format.\n\n  ![classifier_count_barchart](https://raw.githubusercontent.com/moshi4/COGclassifier/main/images/vega-lite_functionality.png)\n\n- **`classifier_count_piechart.html`**  \n\n  Piechart of COG funcitional category classification result.  \n  Functional category with percentages less than 1% don't display letter on piechart.  \n\n  ![classifier_count_piechart](https://raw.githubusercontent.com/moshi4/COGclassifier/main/images/ecoli/classifier_count_piechart.png)\n\n- **`classifier_count_piechart_sort.html`**  \n\n  Piechart with descending sort by count.  \n  Functional category with percentages less than 1% don't display letter on piechart.  \n\n  ![classifier_count_piechart](https://raw.githubusercontent.com/moshi4/COGclassifier/main/images/ecoli/classifier_count_piechart_sort.png)\n\n## Customize charts\n\nCOGclassifier also provides barchart & piechart plotting scripts to customize charts appearence.\nEach script can plot the following feature charts. See [wiki](https://github.com/moshi4/COGclassifier/wiki) for details.\n\n- Features of **plot_cog_classifier_barchart** script  \n  \n  - Adjust figure width, height, barwidth\n  - Plot charts with percentage style instead of count number style\n  - Fix maximum value of Y-axis  \n  - Descending sort by count number or not  \n  - Plot charts from user-customized `classifier_count.tsv`\n\n- Features of **plot_cog_classifier_piechart** script  \n\n  - Adjust figure width, height\n  - Descending sort by count number or not\n  - Show letter on piechart or not\n  - Plot charts from user-customized `classifier_count.tsv`\n",
    'author': 'moshi',
    'author_email': None,
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/moshi4/COGclassifier/',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
